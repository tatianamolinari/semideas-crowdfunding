{"version":3,"sources":["services/ipfsService.js","components/NavBar.js","helpers/utils.js","getWeb3.js","services/campaignService.js","components/campaign/ImagesDetail.js","components/modals/MessageModal.js","components/modals/ContributeModal.js","components/campaign/DisplayContent.js","components/proposals/CardProposal.js","components/proposals/ProposalDetail.js","components/proposals/DisplayProposals.js","components/progressUpdates/ItemProgressUpdates.js","components/progressUpdates/CarrouselImages.js","components/progressUpdates/ProgressUpdateDetail.js","components/progressUpdates/DisplayProgressUpdates.js","components/closeProposals/CardCloseProposal.js","components/closeProposals/CloseProposalDetail.js","components/modals/CloseProposalModal.js","components/closeProposals/DisplayCloseProposals.js","components/errors/ErrorMessage.js","components/buttons/MenuButton.js","components/campaign/ContainerInfo.js","App.js","serviceWorker.js","index.js"],"names":["uint8ArrayToString","require","create","bs58","ipfsService","this","init","ipfs_client","json_value","a","add","JSON","stringify","res","path","hash","content","get","file","chunk","push","getFileFromIPFSHash","parse","address","out","decode","Buffer","toString","substring","bytes","encode","bytes32","hexBytesToAddress","ipfsHash","addressToHexBytes","NavBar","Row","className","Col","lg","src","alt","data-testid","props","indexCampaign","style","color","onClick","previusCampaign","nextCampaign","React","Component","fromIntToStatusCampaign","string_number","status","fromIntToStatusProposal","fromStatusToBadgeClass","badge_class","loadWeb3","resolve","reject","window","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","getWeb3","Promise","document","readyState","addEventListener","campaignService","eth","getAccounts","accounts","net","getId","networkId","instance","initialBlockNumber","initialized","CrowdfundingCampaignDemo","networks","getBlockNumber","blockNumber","Contract","abi","methods","getCampaignInfo","call","campaignValues","campaignData","owner","_owner","_status","goal","_goal","minimunContribution","_minimunContribution","membersCount","_membersCount","finalContributions","_finalContributions","remainingContributions","_remainingContributions","out_grace_period","_out_grace_period","getBalancesInfo","balanceValues","balancesData","balance","_balance","isMember","getMembershipFromAddress","getBalance","options","getStatus","index","getProposal","from","proposalValues","proposalData","recipient","_recipient","value","_value","approvalsCount","_approvalsCount","disapprovalsCount","_disapprovalsCount","limitTime","_limitTime","inTime","_inTime","senderHasVote","_senderHasVote","hasVotedProposal","hasVoted","getCloseProposal","dProposalValues","dProposalData","author","_author","hasVotedCloseProposal","hasWithdraw","senderHasWithdraw","initialBlock","getInitialBlock","block","opts","fromBlock","toBlock","getPastEvents","events","actualizeFunction","getCurrentBlock","currentBlock","NewContribution","error","event","on","subscriptionId","receipt","ChangeStatusCampaign","ProposalVoted","ProposalClosed","CloseProposalCreated","CloseProposalVoted","CloseProposalDissaproved","ProposalRelease","WithdrawFounds","statusResponse","errorMsg","cumulativeGasUsed","gasUsed","getGasPrice","gasprice","contribute","estimateGas","gas","transaction","send","gasPrice","service","promise","transactionOnError","transactionOnReceipt","setActive","approveProposal","disapproveProposal","closeProposal","release","ipfshash","createCloseProposal","approveCloseProposal","disapproveCloseProposal","closeCloseProposal","withdraw","ImagesDetail","i","images","slice","map","src_image","key","renderImages","MessageModal","Modal","show","showMessage","onHide","handleMessageClose","aria-labelledby","centered","Header","closeButton","Title","id","title","Body","message","Footer","ContributeModal","state","contributeLoading","contribuir","parseInt","length","mssj","setState","handleClose","then","handleShow","Button","loading","Form","Group","controlId","Label","Control","placeholder","onChange","target","Text","DisplayContent","active","isOwner","data","canWithdraw","rol","progress","badge_status","loaded","changeTxLoading","actualizeBalanceInfo","getProgress","actualizeContributionInfo","getMembership","getMembersCount","actualizeRol","actualizeWithdrawInfo","setCanWithdraw","actualizeStatusInfo","enum_status","actualizeProgressInfo","activeCampaign","returnValues","contribution","payment","componentDidMount","actualizeInfo","subscribeToNewContribution","subscribeToProposalRelease","subscribeToWithdraw","prevProps","balancesInfo","total","portion","toFixed","Math","min","descripcion","created_at","ipfsData","getIPFSUrlFromPath","description","created_date","c_index","Badge","variant","Icon","fitted","name","href","rel","ProgressBar","now","label","CardProposal","Card","Content","header","extra","proposal_date","ProposalDetail","proposal_data","setProposalData","Date","toLocaleDateString","marginLeft","marginRight","marginTop","marginBottom","DisplayProposals","proposal_data_i","pastProposals","proposals","activePage","totalProposals","totalPages","per_page","loadingClose","loadingVote","loadingTansfer","handlePaginationChange","e","getProposals","pu","ceil","actualizeProposalInfo","subscribeToVoteProposal","subscribeToClosedProposal","allProposals","i_proposal","last_i","max","pHash","ipfsPath","getIPFSHash","getJsonFromIPFSHash","getProposalInfo","proposalInfo","campaignActive","campaignStatus","canVote","canClose","canRelease","message_m","title_m","proposal_nodes","entries","proposal","showProposal","display","Dimmer","Loader","size","inline","Pagination","onPageChange","index_proposal","as","labelPosition","disabled","approve","icon","basic","pointing","disapprove","margin","ItemProgressUpdates","Item","Image","image","Meta","Description","Extra","progress_update_date","CarrouselImages","itemsCarrousel","Carousel","Caption","ProgressUpdateDetail","DisplayProgressUpdates","progress_update_data","progress_updates","pastProgressUpdates","totalProgressUpdates","getProgressUpdates","allProgressUpdates","i_progress_update","puHash","progress_updates_nodes","progress_update","showProgressUpdate","CardCloseProposal","dproposal_date","CloseProposalDetail","dproposal_data","setDProposalData","authorOwner","ClosePorposalModal","cpTitle","cpDescription","createCPLoading","dateToday","addJson","bytes32Hash","getBytes32Hash","rows","DisplayCloseProposals","dproposal_data_i","pastCProposals","cproposals","totalCProposals","getCProposals","canCreate","getListCProposals","actualizeCProposalInfo","setCloseProposalData","actualizeCProposalsListInfo","subscribeToVoteCloseProposal","subscribeToCloseProposalDissaproved","subscribeToCreateCloseProposal","allCProposals","i_cproposal","cproposalData","getCloseProposalInfo","cproposalInfo","page","getCloseProposals","dproposal_nodes","dproposal","showDProposal","CloseProposalModal","index_cproposal","closeCProposal","ErrorMessage","Message","negative","error_msj","MenuButton","disabledValue","changeActive","idName","classLi","textButton","ContainerInfo","loadCampaignData","campaign","deployedCampaignsInfo","isCorrectNetwork","setInstanceFromAddress","campaignInfo","getFirstAccount","actualAccount","subscribeToChangeStatus","refreshSite","change_active","new_active","old_active","active_element","getElementById","active_container","concat","new_active_element","new_active_container","App","new_index","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.802ec421.chunk.js","sourcesContent":["const uint8ArrayToString = require('uint8arrays/to-string');\nconst { create } = require('ipfs-http-client');\nconst bs58 = require('bs58');\n\nclass IPFSService {\n    \n    constructor() {\n      this.init()\n    }\n\n    /**\n     * Creates a new connection to an Infura IPFS node.\n     */\n    init() {\n        this.ipfs_client = create('https://ipfs.infura.io:5001');\n    }\n\n    /**\n     * Saves a json in IPFS. \n     * @param {JSON} json_value json to save.\n     * @returns {String} IPFS hash to access the saved json. \n     */\n    async addJson(json_value){\n        const res = await this.ipfs_client.add(JSON.stringify(json_value));\n        return res.path;\n    }\n\n    /**\n     * Returns and IPFS url to access the data by the path provided.\n     * @param {String} path\n     * @returns {String} ipfs url to access the data. \n     */\n    getIPFSUrlFromPath(path){\n        return `https://ipfs.infura.io/ipfs/${path}`;\n    }\n\n    /**\n     * Get a file previously saved in IPFS by its hash (path).\n     * @param {String} hash\n     * @returns {String} file saved. \n     */\n    async getFileFromIPFSHash(hash){\n        const content = [];\n        for await (const file of this.ipfs_client.get(`/ipfs/${hash}`)) {\n            if (!file.content) continue;\n            for await (const chunk of file.content) {\n                content.push(chunk)\n            }\n        }\n        return uint8ArrayToString(content[0]);\n    }\n\n    /**\n     * Get a json previously saved in IPFS by its hash (path).\n     * @param {String} hash \n     * @returns {JSON} Json file saved. \n     */\n    async getJsonFromIPFSHash(hash){\n        return JSON.parse(await this.getFileFromIPFSHash(hash));\n    }\n\n\n    addressToHexBytes(address){\n        const out = bs58.decode(address);\n        const hexBytes = new Buffer(out).toString('hex');\n        return hexBytes.substring(4);\n    }\n    \n    hexBytesToAddress(bytes){\n        const out = bs58.encode(new Buffer(\"1220\" + bytes, 'hex'));\n        return out;\n    }\n\n    /**\n     * Get an IPFS hash (path) from a bytes32 saved in the blockchain.\n     * @param {String} bytes32 \n     * @returns {String} original IPFS hash (path). \n     */\n    getIPFSHash(bytes32){\n        return this.hexBytesToAddress(bytes32.substring(2));\n    }\n\n     /**\n     * Get an bytes32 to save in the blockchain from IPFS hash.\n     * @param {String} original IPFS hash (path).  \n     * @returns {String} bytes32 \n     */\n    getBytes32Hash(ipfsHash){\n        const bytes32Hash = \"0x\" + this.addressToHexBytes(ipfsHash);\n        return bytes32Hash;\n    }\n\n}\n\nexport const ipfsService = new IPFSService();\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\n\nclass NavBar extends React.Component {\n\n\n  render() {\n    return (<Row className=\"nav-bar\"> \n              <Col className=\"logo-row\" lg={3}>\n                <img src=\"logos/complete_row.png\" alt=\"\" className=\"container_img\" data-testid=\"logoimage\" />\n              </Col>\n              <Col className=\"navigation-campaigns\" lg={9}>\n                <Row> \n                  <Col lg={6} className=\"aling-left\">\n                    { this.props.indexCampaign > 0 &&\n                      <button \n                        className=\"invisible_button\"\n                        style={{color: \"black\"}}\n                        onClick={this.props.previusCampaign}> \n                        &lt;&lt; \n                      </button>\n                    }\n                  </Col>\n                  <Col lg={6} className=\"aling-right\">\n                    { this.props.indexCampaign < 1 &&\n                       <button \n                        className=\"invisible_button\"\n                        style={{color: \"black\"}}\n                        onClick={this.props.nextCampaign}> \n                        &gt;&gt; \n                      </button>\n                    }\n                  </Col>\n                </Row>\n              </Col>\n            </Row>);\n  }\n}\n\nexport default NavBar;","\n/**\n * Get a string campaign status from the enum contract number.\n * @param {String} string_number string enum from contract. \n * @return {String} status.\n */\nfunction fromIntToStatusCampaign(string_number) {\n    let status = \"\";\n    switch (string_number) {\n        case '0':\n            status = \"Creada\";\n            break;\n        case '1':\n            status = \"Activa\";\n            break;\n        case '2':\n            status = \"Cerrada\";\n            break;\n        case '3':\n            status = \"Exitosa\";\n            break;\n        default:\n            break;\n    }\n\n    return status;\n}\n\n/**\n * Get a string proposal status from the enum contract number.\n * @param {String} string_number string enum from contract. \n * @return {String} status.\n */\nfunction fromIntToStatusProposal(string_number) {\n    let status = \"\";\n    switch (string_number) {\n        case '0':\n            status = \"Activo\";\n            break;\n        case '1':\n            status = \"Aprobado\";\n            break;\n        case '2':\n            status = \"Desaprobado\";\n            break;\n        case '3':\n            status = \"Exitoso\";\n            break;\n        default:\n            break;\n    }\n\n    return status;\n}\n\n/**\n * Get the badge class to show the status from the a string status.\n * @param {String} status campaign or proposal status.. \n * @return {String} badge css class.\n */\nfunction fromStatusToBadgeClass(status) {\n    let badge_class = \"\";\n    switch (status) {\n        case 'Creada':\n            badge_class = \"created\";\n            break;\n        case 'Aprobada':\n        case 'Aprobado':\n            badge_class = \"success\";\n            break;\n        case 'Exitosa':\n        case 'Exitoso':\n            badge_class = \"success\";\n            break;\n        case 'Desaprobada':\n        case 'Desaprobado':\n            badge_class = \"danger\";\n            break;\n        case 'Activa':\n        case 'Activo':\n            badge_class = \"active\";\n            break;\n        case 'Cerrada':\n            badge_class = \"danger\";\n            break;\n        default:\n            break;\n    }\n\n    return badge_class;\n}\n\n\nexport { fromIntToStatusCampaign, fromIntToStatusProposal, fromStatusToBadgeClass };","import Web3 from \"web3\";\n\nconst loadWeb3 = async (resolve, reject) => {\n  // Modern dapp browsers...\n  if (window.ethereum) {\n    const web3 = new Web3(window.ethereum);\n    try {\n      // Request account access if needed\n      await window.ethereum.enable();\n      // Acccounts now exposed\n      resolve(web3);\n    } catch (error) {\n      reject(error);\n    }\n  }\n  // Legacy dapp browsers...\n  else if (window.web3) {\n    // Use Mist/MetaMask's provider.\n    const web3 = window.web3;\n    console.log(\"Injected web3 detected.\");\n    resolve(web3);\n  }\n  // Fallback to localhost; use dev console port by default...\n  else {\n    const provider = new Web3.providers.HttpProvider(\n      \"http://127.0.0.1:8545\"\n    );\n    const web3 = new Web3(provider);\n    console.log(\"No web3 instance injected, using Local web3.\");\n    resolve(web3);\n  }\n}\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    if (document.readyState === 'complete') {\n      loadWeb3(resolve, reject);\n    } else {\n      window.addEventListener(\"load\", () => loadWeb3(resolve, reject));\n    }\n  });\n\nexport default getWeb3;\n","import getWeb3 from \"../getWeb3\";\nimport CrowdfundingCampaignDemo from \"../contracts/CrowdfundingCampaignDemo.json\";\n\nclass CampaignService {\n    \n  constructor() {\n    this.init();\n  }\n\n  /**\n   * Creates a new connection to the blockchain network selected. \n   * @returns {Boolean} true when connect.\n   */\n  async init() {\n    this.web3 = await getWeb3();\n    this.accounts = await this.web3.eth.getAccounts();\n    this.networkId = await this.web3.eth.net.getId();\n    this.instance = null;\n    this.initialBlockNumber = null;\n    return true;\n  }\n\n  /**\n   * Returns the list of accounts in the wallet.\n   * @returns {Array} accounts.\n   */\n  async getAccounts(){\n    return (await this.web3.eth.getAccounts());\n  }\n\n  /**\n   * Get the selected account from the wallet.\n   * @returns {String} address of selected account.\n   */\n  getFirstAccount(){\n    return this.accounts[0];\n  }\n\n  /**\n   * Check if the network selected has the contract deployed.\n   * @returns {Boolean} true if the network select is correct and false otherwise\n   */\n  async isCorrectNetwork() {\n    const initialized = await this.init();\n    console.log(`Now initialized is ${initialized}`);\n    return CrowdfundingCampaignDemo.networks[this.networkId];\n  }\n\n  /**\n   * Get the currect block of the network.\n   * @returns {Number} current block number.\n   */\n  async getCurrentBlock(){\n    return (await this.web3.eth.getBlockNumber())\n  }\n\n  /**\n   * Get the initial block of the contract.\n   * @returns {Number} initial block number.\n   */\n  getInitialBlock() {\n    return this.initialBlockNumber;\n  }\n\n  /**\n   *  Set the initial block number and an instance of the contract from an address.\n   * @param {String} address the address contract.\n   * @param {Number} blockNumber initial block number.\n   * @returns {Object} a CrowdfundingCampaignDemo instance.\n   */\n  async setInstanceFromAddress(address, blockNumber) {\n    this.instance = await new this.web3.eth.Contract(\n      CrowdfundingCampaignDemo.abi,\n      CrowdfundingCampaignDemo.networks[this.networkId] && address,\n    );\n    this.initialBlockNumber = blockNumber;\n    return this.instance;\n  }\n\n  /**\n   * Get the current CrowdfundingCampaignDemo instance.\n   * @returns {Object} the CrowdfundingCampaignDemo instance.\n   */\n  getInstance(){\n    return this.instance;\n  }\n\n  /**\n   * Returns a json object with the campaign info of the current CrowdfundingCampaignDemo instance.\n   * @returns {JSON} campaign info as json.\n   * */\n  async getCampaignInfo() {\n    const campaignValues = await this.instance.methods.getCampaignInfo().call();\n    const campaignData = {};\n    campaignData.owner = campaignValues._owner;\n    campaignData.status = campaignValues._status;\n    campaignData.goal = campaignValues._goal;\n    campaignData.minimunContribution = campaignValues._minimunContribution;\n    campaignData.membersCount = campaignValues._membersCount;\n    campaignData.finalContributions = campaignValues._finalContributions;\n    campaignData.remainingContributions = campaignValues._remainingContributions;\n    campaignData.out_grace_period = campaignValues._out_grace_period;\n\n    return campaignData;\n  }\n\n  /**\n   * Returns a json object with the balance campaign info of the current CrowdfundingCampaignDemo instance.\n   * @returns {JSON} balance campaign info as json.\n   * */\n  async getBalancesInfo() {\n    const balanceValues = await this.instance.methods.getBalancesInfo().call();\n\n    const balancesData = {};\n    balancesData.goal = balanceValues._goal;\n    balancesData.finalContributions = balanceValues._finalContributions;\n    balancesData.remainingContributions = balanceValues._remainingContributions;\n    balancesData.balance = balanceValues._balance;\n\n    return balancesData;\n  }\n\n  /**\n   * Check if an address it's from a member of the campaign.\n   * @param {String} address\n   * @returns {Boolean} true if the address passed as param is a member and false otherwise. \n   */\n  async getMembershipFromAddress(address) {\n    return (await this.instance.methods.isMember(address).call());\n  }\n\n  /**\n   * Check if the selected address it's from a member of the campaign.\n   * @returns {Boolean} true if the selected address passed as param is a member and false otherwise. \n   */\n  async getMembership() {\n    return (this.getMembershipFromAddress(this.accounts[0]))\n  }\n\n  /**\n   * Get the balance of the campaign.\n   * @returns {Number} campaign balance in wei. \n   */\n  async getBalance() {\n    return (await this.web3.eth.getBalance(this.instance.options.address));\n  }\n\n  /**\n   * Get the quantity of members of the campaign.\n   * @returns {Number} qty memmbers. \n   */\n  async getMembersCount() {\n    return (await this.instance.methods.membersCount().call());\n  }\n\n  /**\n   * Get the campaign status.\n   * @returns {Number} current campaign status. \n   */\n  async getStatus() {\n    return (await this.instance.methods.getStatus().call());\n  }\n\n  /**\n   * Returns a json object with the proposal info of the index passed as param.\n   * @param {Number} index the proposal index.\n   * @returns {JSON} proposal info as json.\n   * */\n  async getProposalInfo(index) {\n    const proposalValues = await this.instance.methods.getProposal(index).call({ from: this.accounts[0]});\n            \n    const proposalData = {};\n    proposalData.recipient = proposalValues._recipient;\n    proposalData.value = proposalValues._value;\n    proposalData.approvalsCount = proposalValues._approvalsCount;\n    proposalData.disapprovalsCount = proposalValues._disapprovalsCount;\n    proposalData.status = proposalValues._status;\n    proposalData.limitTime = proposalValues._limitTime;\n    proposalData.inTime = proposalValues._inTime;\n    proposalData.senderHasVote = proposalValues._senderHasVote;\n\n    return proposalData;\n  }\n\n  /**\n   * Check if the selected account has voted the proposal of the index passed as param.\n   * @param {Number} index the proposal index.\n   * @returns {Boolean} true if the account has voted the proposal and false otherwise.\n   * */\n  async hasVotedProposal(index) {\n    const hasVoted = await this.instance.methods.hasVotedProposal(index).call();\n    return hasVoted;\n  }\n\n  /**\n   * Returns a json object with the close proposal info of the index passed as param.\n   * @param {Number} index the close proposal index.\n   * @returns {JSON} close proposal info as json.\n   * */\n  async getCloseProposalInfo(index) {\n    const dProposalValues = await this.instance.methods.getCloseProposal(index).call({ from: this.accounts[0]});\n             \n    const dProposalData = {};\n    dProposalData.approvalsCount = dProposalValues._approvalsCount;\n    dProposalData.disapprovalsCount = dProposalValues._disapprovalsCount;\n    dProposalData.status = dProposalValues._status;\n    dProposalData.limitTime = dProposalValues._limitTime;\n    dProposalData.inTime = dProposalValues._inTime;\n    dProposalData.senderHasVote = dProposalValues._senderHasVote;\n    dProposalData.author = dProposalValues._author;\n\n    return dProposalData;\n  }\n\n  /**\n   * Check if the selected account has voted the close proposal of the index passed as param.\n   * @param {Number} index the close proposal index.\n   * @returns {Boolean} true if the account has voted the close proposal and false otherwise.\n   * */\n  async hasVotedCloseProposal(index) {\n    const hasVoted = await this.instance.methods.hasVotedCloseProposal(index).call();\n    return hasVoted;\n  }\n\n  /**\n   * Check if the selected account has withdraw his remaining founds.\n   * @param {Number} index the close proposal index.\n   * @returns {Boolean} true if the selected account has withdraw his remaining founds and false otherwise.\n   * */\n  async hasWithdraw() {\n    const senderHasWithdraw = await this.instance.methods.hasWithdraw().call({ from: this.accounts[0]});\n    return senderHasWithdraw;\n  }\n\n\n  /** Get past events */\n\n  /**\n   * Gets all the progress updates events from the initial block of the instance.\n   * @returns {Array} progress updates events.\n   */\n  async getProgressUpdates() {\n    \n    const initialBlock = this.getInitialBlock();\n    const block = await this.web3.eth.getBlockNumber();\n    const opts = { fromBlock: initialBlock, toBlock: block }\n    const events = await this.instance.getPastEvents('ProgressUpdate', opts);\n    return events;\n  }\n\n  /**\n   * Gets all the proposals events from the initial block of the instance.\n   * @returns {Array} proposals events.\n   */\n  async getProposals() {\n    \n    const initialBlock = this.getInitialBlock();\n    const block = await this.web3.eth.getBlockNumber();\n    const opts = { fromBlock: initialBlock, toBlock: block }\n    const events = await this.instance.getPastEvents('ProposalCreated', opts);\n    return events;\n  }\n\n  /**\n   * Gets all the close proposals events from the initial block of the instance.\n   * @returns {Array} close proposals events.\n   */\n  async getCloseProposals() {\n    \n    const initialBlock = this.getInitialBlock();\n    const block = await this.web3.eth.getBlockNumber();\n    const opts = { fromBlock: initialBlock, toBlock: block }\n    const events = await this.instance.getPastEvents('CloseProposalCreated', opts);\n    return events;\n  }\n\n\n/** Events subscriptions */\n\n  /**\n   * Subscribe to new contribution events from the currect block.\n   * @param {Function} actualizeFunction function to execute every time a new event is emit by the contract.\n   */\n  async subscribeToNewContribution(actualizeFunction){\n\n    const currentBlock = await this.getCurrentBlock();\n\n    this.instance.events.NewContribution({\n      fromBlock: currentBlock\n      }, function(error, event){ console.log(event); })\n      .on(\"connected\", function(subscriptionId){\n      })\n      .on('data', function(event){\n          actualizeFunction();\n      })\n      .on('error', function(error, receipt) {\n        console.log(\"hubo un error\");\n        console.log(error);\n      });\n  }\n\n  /**\n   * Subscribe to change status campaign events from the currect block.\n   * @param {Function} actualizeFunction function to execute every time a new event is emit by the contract.\n   */\n  async subscribeToChangeStatus(actualizeFunction){\n\n    const currentBlock = await this.getCurrentBlock();\n\n    this.instance.events.ChangeStatusCampaign({\n      fromBlock: currentBlock\n      }, function(error, event){ console.log(event); })\n      .on(\"connected\", function(subscriptionId){\n      })\n      .on('data', function(event){\n          console.log(\"llego un evento\");\n          actualizeFunction();\n      })\n      .on('error', function(error, receipt) {\n        console.log(\"hubo un error\");\n        console.log(error);\n      });\n\n\n  }\n\n  /**\n   * Subscribe to vote proposals events from the currect block.\n   * @param {Function} actualizeFunction function to execute every time a new event is emit by the contract.\n   */\n  async subscribeToVoteProposal(actualizeFunction){\n\n    const currentBlock = await this.getCurrentBlock();\n\n    this.instance.events.ProposalVoted({\n      fromBlock: currentBlock\n      }, function(error, event){ console.log(event); })\n      .on(\"connected\", function(subscriptionId){\n      })\n      .on('data', function(event){\n          actualizeFunction();\n      })\n      .on('error', function(error, receipt) {\n        console.log(\"hubo un error\");\n        console.log(error);\n      });\n  }\n\n  /**\n   * Subscribe to close proposals events from the currect block.\n   * @param {Function} actualizeFunction function to execute every time a new event is emit by the contract.\n   */\n  async subscribeToClosedProposal(actualizeFunction){\n\n    const currentBlock = await this.getCurrentBlock();\n\n    this.instance.events.ProposalClosed({\n      fromBlock: currentBlock\n      }, function(error, event){ console.log(event); })\n      .on(\"connected\", function(subscriptionId){\n      })\n      .on('data', function(event){\n          actualizeFunction();\n      })\n      .on('error', function(error, receipt) {\n        console.log(\"hubo un error\");\n        console.log(error);\n      });\n  }\n\n  /**\n   * Subscribe to create close proposal events from the currect block.\n   * @param {Function} actualizeFunction function to execute every time a new event is emit by the contract.\n   */\n  async subscribeToCreateCloseProposal(actualizeFunction){\n\n    const currentBlock = await this.getCurrentBlock();\n\n    this.instance.events.CloseProposalCreated({\n      fromBlock: currentBlock\n      }, function(error, event){ console.log(event); })\n      .on(\"connected\", function(subscriptionId){\n      })\n      .on('data', function(event){\n          actualizeFunction();\n      })\n      .on('error', function(error, receipt) {\n        console.log(\"hubo un error\");\n        console.log(error);\n      });\n  }\n\n  /**\n   * Subscribe to vote close proposal events from the currect block.\n   * @param {Function} actualizeFunction function to execute every time a new event is emit by the contract.\n   */\n  async subscribeToVoteCloseProposal(actualizeFunction){\n\n    const currentBlock = await this.getCurrentBlock();\n\n    this.instance.events.CloseProposalVoted({\n      fromBlock: currentBlock\n      }, function(error, event){ console.log(event); })\n      .on(\"connected\", function(subscriptionId){\n      })\n      .on('data', function(event){\n          actualizeFunction();\n      })\n      .on('error', function(error, receipt) {\n        console.log(\"hubo un error\");\n        console.log(error);\n      });\n  }\n\n  /**\n   * Subscribe to close proposal dissaproved events from the currect block.\n   * @param {Function} actualizeFunction function to execute every time a new event is emit by the contract.\n   */\n  async subscribeToCloseProposalDissaproved(actualizeFunction){\n\n    const currentBlock = await this.getCurrentBlock();\n\n    this.instance.events.CloseProposalDissaproved({\n      fromBlock: currentBlock\n      }, function(error, event){ console.log(event); })\n      .on(\"connected\", function(subscriptionId){\n      })\n      .on('data', function(event){\n          actualizeFunction();\n      })\n      .on('error', function(error, receipt) {\n        console.log(\"hubo un error\");\n        console.log(error);\n      });\n  }\n\n  /**\n   * Subscribe to proposal realease events from the currect block.\n   * @param {Function} actualizeFunction function to execute every time a new event is emit by the contract.\n   */\n  async subscribeToProposalRelease(actualizeFunction){\n\n    const currentBlock = await this.getCurrentBlock();\n\n    this.instance.events.ProposalRelease({\n      fromBlock: currentBlock\n      }, function(error, event){ console.log(event); })\n      .on(\"connected\", function(subscriptionId){\n      })\n      .on('data', function(event){\n          actualizeFunction(event);\n      })\n      .on('error', function(error, receipt) {\n        console.log(\"hubo un error\");\n        console.log(error);\n      });\n  }\n\n  /**\n   * Subscribe to withdraw events from the currect block.\n   * @param {Function} actualizeFunction function to execute every time a new event is emit by the contract.\n   */\n  async subscribeToWithdraw(actualizeFunction){\n\n    const currentBlock = await this.getCurrentBlock();\n\n    this.instance.events.WithdrawFounds({\n      fromBlock: currentBlock\n      }, function(error, event){ console.log(event); })\n      .on(\"connected\", function(subscriptionId){\n      })\n      .on('data', function(event){\n        console.log(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\")\n        actualizeFunction(event);\n      })\n      .on('error', function(error, receipt) {\n        console.log(\"hubo un error\");\n        console.log(error);\n      });\n  }\n\n\n/** Handle transactions */\n\n  transactionOnError(error, receipt, statusResponse, resolve)  { \n    statusResponse.error = true;\n      \n    if (error[\"code\"] === 4001) {\n      statusResponse.errorMsg = \"Acción denegada\";\n      console.log(statusResponse.errorMsg);\n    }\n    else if(error[\"code\"] === -32603) {\n      statusResponse.errorMsg = \"Nonce error\";\n    }\n    else if (receipt && (receipt.cumulativeGasUsed === receipt.gasUsed)) {\n      statusResponse.errorMsg = \"Gas insuficiente\";\n    }\n    else {\n      statusResponse.errorMsg = \"Error desconocido\"\n      console.log(statusResponse.errorMsg);\n      console.log(error);\n    }\n    resolve(statusResponse, receipt);\n  }\n\n  transactionOnReceipt(receipt, statusResponse, resolve){\n      statusResponse.res = receipt;\n      console.log('reciept', receipt);\n      if(receipt.status === '0x1' || receipt.status === 1  || receipt.status===true ){\n        console.log('Transaction Success');\n      }\n      else {\n        console.log('Transaction receipt but failed')\n      }\n    resolve(statusResponse);\n  }\n\n\n/** Transactions */\n\n   /**\n   * Send contribution from the account selected to the campaign.\n   * @param {Number} vale value to contribute.\n   * */\n  async contribute(value) {\n    const gasprice = await this.web3.eth.getGasPrice();\n    const gas = await this.instance.methods.contribute().estimateGas({ from: this.accounts[0], value: value });      \n    const transaction = this.instance.methods.contribute().send({ from: this.accounts[0], gasPrice: gasprice, gas: gas, value: value }) ;    \n    var service = this;\n\n    const promise = new Promise(function(resolve, reject) {\n\n      const statusResponse = {};\n      statusResponse.error = false;\n      statusResponse.errorMsg = \"\";\n\n      transaction.on('error', (error, receipt) => { service.transactionOnError(error, receipt, statusResponse, resolve) });\n      transaction.on('receipt', (receipt) => service.transactionOnReceipt(receipt, statusResponse, resolve));\n\n    });\n\n    return promise;\n  }\n\n  /**\n   * Change the campaign status to Active.\n   * */\n  async setActive() {\n    const gasprice = await this.web3.eth.getGasPrice();\n    const gas = await this.instance.methods.setActive().estimateGas({ from: this.accounts[0] });      \n    const transaction = this.instance.methods.setActive().send({ from: this.accounts[0], gasPrice: gasprice, gas: gas}) ;    \n    var service = this;\n\n    const promise = new Promise(function(resolve, reject) {\n\n      const statusResponse = {};\n      statusResponse.error = false;\n      statusResponse.errorMsg = \"\";\n\n      transaction.on('error', (error, receipt) => { service.transactionOnError(error, receipt, statusResponse, resolve) });\n      transaction.on('receipt', (receipt) => service.transactionOnReceipt(receipt, statusResponse, resolve));\n\n    });\n\n    return promise;\n  }\n\n  /**\n   * Send an approve vote from the selected account to the proposal from the index passed as param.\n   * @param {Number} index the index of the proposal to approve.\n   * */\n  async approveProposal(index) {\n\n    const gasprice = await this.web3.eth.getGasPrice();\n    const gas = await this.instance.methods.approveProposal(index).estimateGas({ from: this.accounts[0] });      \n    const transaction = this.instance.methods.approveProposal(index).send({ from: this.accounts[0], gasPrice: gasprice, gas: gas }) ;    \n    var service = this;\n\n    const promise = new Promise(function(resolve, reject) {\n\n      const statusResponse = {};\n      statusResponse.error = false;\n      statusResponse.errorMsg = \"\";\n\n      transaction.on('error', (error, receipt) => { service.transactionOnError(error, receipt, statusResponse, resolve) });\n      transaction.on('receipt', (receipt) => service.transactionOnReceipt(receipt, statusResponse, resolve));\n\n    });\n\n    return promise;\n  }\n  \n  /**\n   * Send a disapprove vote from the selected account to the proposal from the index passed as param.\n   * @param {Number} index the index of the proposal to disapprove.\n   * */\n  async disapproveProposal(index) {\n\n    const gasprice = await this.web3.eth.getGasPrice();\n    const gas = await this.instance.methods.disapproveProposal(index).estimateGas({ from: this.accounts[0] });      \n    const transaction = this.instance.methods.disapproveProposal(index).send({ from: this.accounts[0], gasPrice: gasprice, gas: gas }) ;    \n    var service = this;\n\n    const promise = new Promise(function(resolve, reject) {\n\n      const statusResponse = {};\n      statusResponse.error = false;\n      statusResponse.errorMsg = \"\";\n\n      transaction.on('error', (error, receipt) => { service.transactionOnError(error, receipt, statusResponse, resolve) });\n      transaction.on('receipt', (receipt) => service.transactionOnReceipt(receipt, statusResponse, resolve));\n\n    });\n\n    return promise;\n  }\n\n  /**\n   * Close the proposal from the index passed as param.\n   * @param {Number} index the index of the proposal to close.\n   * */\n  async closeProposal(index) {\n\n    const gasprice = await this.web3.eth.getGasPrice();\n    const gas = await this.instance.methods.closeProposal(index).estimateGas({ from: this.accounts[0] });      \n    const transaction = this.instance.methods.closeProposal(index).send({ from: this.accounts[0], gasPrice: gasprice, gas: gas }) ;    \n    var service = this;\n\n    const promise = new Promise(function(resolve, reject) {\n\n      const statusResponse = {};\n      statusResponse.error = false;\n      statusResponse.errorMsg = \"\";\n\n      transaction.on('error', (error, receipt) => { service.transactionOnError(error, receipt, statusResponse, resolve) });\n      transaction.on('receipt', (receipt) => service.transactionOnReceipt(receipt, statusResponse, resolve));\n\n    });\n\n    return promise;\n  }\n\n  /**\n   * Release the founds from the proposal from the index passed as param.\n   * @param {Number} index the index of the proposal approved to realese founds.\n   * */\n  async release(index) {\n\n    const gasprice = await this.web3.eth.getGasPrice();\n    const gas = await this.instance.methods.release(index).estimateGas({ from: this.accounts[0] });      \n    const transaction = this.instance.methods.release(index).send({ from: this.accounts[0], gasPrice: gasprice, gas: gas }) ;    \n    var service = this;\n\n    const promise = new Promise(function(resolve, reject) {\n\n      const statusResponse = {};\n      statusResponse.error = false;\n      statusResponse.errorMsg = \"\";\n\n      transaction.on('error', (error, receipt) => { service.transactionOnError(error, receipt, statusResponse, resolve) });\n      transaction.on('receipt', (receipt) => service.transactionOnReceipt(receipt, statusResponse, resolve));\n\n    });\n\n    return promise;\n  }\n\n  /**\n   * Creates a new Close proposal using the IPFS hash passed as param.\n   * @param {String} ipfshash IPFS hash.\n   * */\n  async createCloseProposal(ipfshash) {\n    \n    const gasprice = await this.web3.eth.getGasPrice();\n    const gas = await this.instance.methods.createCloseProposal(ipfshash).estimateGas({ from: this.accounts[0] });      \n    const transaction = this.instance.methods.createCloseProposal(ipfshash).send({ from: this.accounts[0], gasPrice: gasprice, gas: gas }) ;    \n    var service = this;\n\n    const promise = new Promise(function(resolve, reject) {\n\n      const statusResponse = {};\n      statusResponse.error = false;\n      statusResponse.errorMsg = \"\";\n\n      transaction.on('error', (error, receipt) => { service.transactionOnError(error, receipt, statusResponse, resolve) });\n      transaction.on('receipt', (receipt) => service.transactionOnReceipt(receipt, statusResponse, resolve));\n\n    });\n\n    return promise;\n  }\n \n  /**\n   * Send an approve vote from the selected account to the close proposal from the index passed as param.\n   * @param {Number} index the index of the close proposal to approve.\n   * */\n  async approveCloseProposal(index) {\n\n    const gasprice = await this.web3.eth.getGasPrice();\n    const gas = await this.instance.methods.approveCloseProposal(index).estimateGas({ from: this.accounts[0] });      \n    const transaction = this.instance.methods.approveCloseProposal(index).send({ from: this.accounts[0], gasPrice: gasprice, gas: gas }) ;    \n    var service = this;\n\n    const promise = new Promise(function(resolve, reject) {\n\n      const statusResponse = {};\n      statusResponse.error = false;\n      statusResponse.errorMsg = \"\";\n\n      transaction.on('error', (error, receipt) => { service.transactionOnError(error, receipt, statusResponse, resolve) });\n      transaction.on('receipt', (receipt) => service.transactionOnReceipt(receipt, statusResponse, resolve));\n\n    });\n\n    return promise;\n  }\n\n  /**\n   * Send a disapprove vote from the selected account to the close proposal from the index passed as param.\n   * @param {Number} index the index of the close proposal to disapprove.\n   * */\n  async disapproveCloseProposal(index) {\n\n    const gasprice = await this.web3.eth.getGasPrice();\n    const gas = await this.instance.methods.disapproveCloseProposal(index).estimateGas({ from: this.accounts[0] });      \n    const transaction = this.instance.methods.disapproveCloseProposal(index).send({ from: this.accounts[0], gasPrice: gasprice, gas: gas }) ;    \n    var service = this;\n\n    const promise = new Promise(function(resolve, reject) {\n\n      const statusResponse = {};\n      statusResponse.error = false;\n      statusResponse.errorMsg = \"\";\n\n      transaction.on('error', (error, receipt) => { service.transactionOnError(error, receipt, statusResponse, resolve) });\n      transaction.on('receipt', (receipt) => service.transactionOnReceipt(receipt, statusResponse, resolve));\n\n    });\n\n    return promise;\n  }\n\n  /**\n   * Close the close proposal from the index passed as param.\n   * @param {Number} index the index of the close proposal to close.\n   * */\n  async closeCloseProposal(index) {\n\n    const gasprice = await this.web3.eth.getGasPrice();\n    const gas = await this.instance.methods.closeCloseProposal(index).estimateGas({ from: this.accounts[0] });      \n    const transaction = this.instance.methods.closeCloseProposal(index).send({ from: this.accounts[0], gasPrice: gasprice, gas: gas }) ;    \n    var service = this;\n\n    const promise = new Promise(function(resolve, reject) {\n\n      const statusResponse = {};\n      statusResponse.error = false;\n      statusResponse.errorMsg = \"\";\n\n      transaction.on('error', (error, receipt) => { service.transactionOnError(error, receipt, statusResponse, resolve) });\n      transaction.on('receipt', (receipt) => service.transactionOnReceipt(receipt, statusResponse, resolve));\n\n    });\n\n    return promise;\n  }\n\n  /**\n   * Withdraw the remaining founds from the campaign.\n   */\n  async withdraw() {\n\n    const gasprice = await this.web3.eth.getGasPrice();\n    const gas = await this.instance.methods.withdraw().estimateGas({ from: this.accounts[0] });      \n    const transaction = this.instance.methods.withdraw().send({ from: this.accounts[0], gasPrice: gasprice, gas: gas }) ;    \n    var service = this;\n\n    const promise = new Promise(function(resolve, reject) {\n\n      const statusResponse = {};\n      statusResponse.error = false;\n      statusResponse.errorMsg = \"\";\n\n      transaction.on('error', (error, receipt) => { service.transactionOnError(error, receipt, statusResponse, resolve) });\n      transaction.on('receipt', (receipt) => service.transactionOnReceipt(receipt, statusResponse, resolve));\n\n    });\n\n    return promise;\n  }\n\n}\n\nexport const campaignService = new CampaignService()\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\n\nclass ImagesDetail extends React.Component {\n\n  renderImages() {\n    let i = 0;\n    const images =  this.props.images.slice(0, 3).map(src_image => {\n      i++;\n      return (\n        <Col key={i} lg={4}> <img data-testid=\"campaign-photo\" src={src_image} alt=\"\" className=\"photos\" /> </Col>\n      );\n    });\n    return images;\n  }\n\n  render() {\n    return (  <Row className=\"image-detail-container\">\n                {this.renderImages()}\n              </Row>);\n  }\n}\n\nexport default ImagesDetail;","import React from \"react\";\nimport { Modal, Col } from \"react-bootstrap\";\n\n\nclass MessageModal extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <Modal show={this.props.showMessage} onHide={this.props.handleMessageClose}\n        className=\"message-modal-error\"\n        data-testid=\"errorModal\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered>\n          <Modal.Header closeButton>\n            <Modal.Title id=\"contained-modal-title-vcenter\" data-testid=\"title\">{this.props.title}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body data-testid=\"message\">\n              {this.props.message}\n          </Modal.Body>\n          <Modal.Footer className=\"footer-buttons\">\n              <Col lg={6} className=\"aling-right\">\n                  <button \n                      className=\"normal-button\" \n                      onClick={this.props.handleMessageClose}>\n                      Cerrar\n                  </button>\n              </Col>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default MessageModal;","import React from \"react\";\nimport { Modal, Col, Form } from \"react-bootstrap\";\nimport { Button } from \"semantic-ui-react\";\nimport MessageModal from \"../modals/MessageModal\"\n\nimport { campaignService } from \"../../services/campaignService.js\"\n\nclass ContributeModal extends React.Component {\n\n  state = {\n    show: false,\n    value: '',\n    minimunContribution: this.props.minimunContribution,\n    showMessage: false,\n    message: \"\",\n    contributeLoading: this.props.contributeLoading\n  };\n\n  contribuir = async() =>  {\n    if (parseInt(this.state.value) >= parseInt(this.state.minimunContribution)){\n      try {\n        const accounts = await campaignService.getAccounts();\n        if(accounts.length===0) {\n          const mssj = \"Para contribuir debes haber iniciado sesión en la wallet de metamask.\";\n          this.setState({ showMessage: true, message: mssj});\n          console.log(mssj);\n        }\n        else {\n          this.setState({ contributeLoading: true});\n          this.handleClose();\n          campaignService.contribute(this.state.value).then((statusResponse) => {\n            let title, message = \"\";\n            if (statusResponse.error) {\n              title = \"Hubo un error al contribuir\";\n              switch (statusResponse.errorMsg) {\n                case \"Acción denegada\":\n                  message = \"Has denegado la acción a tráves de metamask. Para que este completa debes aceptarla.\";\n                  break;\n                case \"Nonce error\":\n                  message = \"Error de nonce: El nonce de la cuenta elegida y de la transacción son diferentes.\";\n                  break;\n                case \"Gas insuficiente\":\n                  message = \"La operación llevó más gas que el que pusiste como límite.\";\n                  break;\n                default: \n                  message = \"Error desconocido\";\n                  break;\n              }\n            }\n            else {\n              title = \"Bienvenido al proyecto\";\n              message = \"¡La contribución que hiciste se ejecutó de manera exitosa!\\n ¡Gracias por contribuir!\"; \n            }\n\n            this.setState({ contributeLoading: false, \n                            message: message, \n                            showMessage: true, \n                            title: title});\n          });\n        }\n      }\n      catch(error)  {\n        console.log(error);\n      }\n    }\n    else {\n      const msg = \"La contribución debe ser mayor a la mínima\";\n      this.setState({ message: msg, showMessage:true});\n    }\n  }\n\n  handleClose = () => this.setState({ show: false});\n  \n  handleShow = () => this.setState({ show: true});\n\n  handleMessageClose = () => this.setState({ showMessage: false});\n\n  render() {\n    return (\n      <div>\n\n        { this.state.showMessage &&\n          <MessageModal\n          showMessage={this.state.showMessage}\n          handleMessageClose={this.handleMessageClose}\n          message={this.state.message}\n          title={this.state.title} />\n        }\n      \n        <Button\n        loading={this.state.contributeLoading}\n        className=\"normal-button\"\n        onClick={this.handleShow}\n        data-testid=\"cuntributionButton\">\n              Quiero contribuir\n        </Button>\n        \n        <Modal show={this.state.show} onHide={this.handleClose}\n        data-testid=\"contributionModal\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered>\n          <Modal.Header closeButton>\n            <Modal.Title id=\"contained-modal-title-vcenter\">Contribuir con la campaña</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n              <Form>\n                  <Form.Group controlId=\"contributeBasicForm\">\n                      <Form.Label>Contribuir con:</Form.Label>\n                      <Form.Control placeholder=\"Valor en wei\" onChange={event => this.setState({ value: event.target.value})}/>\n                      <Form.Text className=\"text-muted\">\n                      *el valor debe ser mayor al mínimo que es <span data-testid=\"minimunContribution\">{this.state.minimunContribution}</span>.\n                      </Form.Text>\n                  </Form.Group>\n              </Form>\n          </Modal.Body>\n          <Modal.Footer className=\"footer-buttons\">\n              <Col lg={6} className=\"aling-left\">\n                  <button \n                      id=\"cerrar\"\n                      className=\"normal-button\" \n                      onClick={this.handleClose}\n                      data-testid=\"cancelButton\">\n                      Cerrar\n                  </button>\n              </Col>\n              <Col lg={6} className=\"aling-right\">\n                  <button\n                      className=\"normal-button\" \n                      onClick={this.contribuir}\n                      data-testid=\"aceptContributionButton\">\n                      Contribuir\n                  </button>\n              </Col>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default ContributeModal;","import React from \"react\";\nimport { Badge } from \"react-bootstrap\";\nimport { Label, Icon, Button } from 'semantic-ui-react'\nimport ProgressBar from 'react-bootstrap/ProgressBar'\n\nimport { fromIntToStatusCampaign, fromStatusToBadgeClass } from \"../../helpers/utils.js\";\nimport { campaignService } from \"../../services/campaignService.js\"\nimport { ipfsService } from \"../../services/ipfsService.js\"\n\nimport ImagesDetail from \"./ImagesDetail.js\";\nimport ContributeModal from \"../modals/ContributeModal\"\nimport MessageModal from \"../modals/MessageModal\"\n\n\nclass DisplayContent extends React.Component {\n\n  state = {\n    active: this.props.active,\n    isOwner: this.props.data.isOwner,\n    isMember: this.props.data.isMember,\n    balance: this.props.data.balance,\n    membersCount: this.props.data.membersCount,\n    status: this.props.data.status,\n    goal: this.props.data.goal, \n    finalContributions: this.props.data.finalContributions, \n    remainingContributions: this.props.data.remainingContributions, \n    canWithdraw: false,\n    rol: null,\n    progress: 0,\n    badge_status:'',\n    loaded: false,\n    changeTxLoading: false,\n    showMessage: false,\n    message: '',\n    title: ''\n  };\n\n  actualizeBalanceInfo = async () => {\n    const balance = await campaignService.getBalance();\n    const progress = this.getProgress(this.props.data.goal,balance);\n    this.setState({ balance: balance, progress: progress });\n  }\n\n  actualizeContributionInfo = async() =>  {\n\n    try {\n      const isMember = await campaignService.getMembership();\n      const balance = await campaignService.getBalance();\n      const membersCount = await campaignService.getMembersCount();\n\n      this.actualizeRol(this.state.isOwner, isMember);\n\n      const progress = this.getProgress(this.props.data.goal,balance);\n      \n      this.setState({ isMember: isMember, \n                      balance: balance, \n                      membersCount: membersCount,\n                      progress: progress });\n    }\n    catch (error) {\n      console.error(error);\n    }\n  }\n\n  actualizeWithdrawInfo = async() => {\n    const balance = await campaignService.getBalance();\n    const progress = this.getProgress(this.state.finalContributions,balance);\n    this.setState({ balance: balance, progress: progress });\n  }\n\n  setCanWithdraw = async () => {\n    let canWithdraw = false;\n    if (this.state.status === \"Cerrada\" || this.state.status === \"Exitosa\")\n    {\n      const hasWithdraw = await campaignService.hasWithdraw(); \n      canWithdraw = !hasWithdraw;\n    }\n    this.setState( { canWithdraw: canWithdraw } );\n  }\n\n  actualizeStatusInfo = async () =>  {\n\n    try {\n      const enum_status = await campaignService.getStatus();\n      const status = fromIntToStatusCampaign(enum_status);\n      const badge_status = fromStatusToBadgeClass(status);\n      this.setState({ status: status, badge_status: badge_status });\n    }\n    catch (error) {\n      console.error(error);\n    }\n  }\n\n  actualizeProgressInfo = () => {\n    let progress;\n    if (this.state.status !== 'Creada') { \n      progress = this.getProgress(this.state.finalContributions,this.state.balance); \n\n    } else {\n      progress = this.getProgress(this.state.goal, this.state.balance);\n    }\n    this.setState({ progress: progress });\n  }\n  \n  actualizeRol = (isOwner,isMember) => {\n    if (isOwner) {\n      this.setState({ rol: \"Eres el owner\" });\n    }\n    else if (isMember) {\n      this.setState({ rol: \"Eres miembro\" });\n    }\n  }\n\n  activeCampaign = async() => {\n   \n      try {\n        const accounts = await campaignService.getAccounts();\n        if(accounts.length===0) {\n          const mssj = \"Para activar la campaña debes haber iniciado sesión en la wallet de metamask.\";\n          this.setState({ showMessage: true, message: mssj});\n          console.log(mssj);\n        }\n        else {\n\n          this.setState({ changeTxLoading: true});\n          campaignService.setActive().then((statusResponse) => {\n            let title, message = \"\";\n            if (statusResponse.error) {\n              title = \"Hubo un error al activar la campaña\";\n              switch (statusResponse.errorMsg) {\n                case \"Acción denegada\":\n                  message = \"Has denegado la acción a tráves de metamask. Para que este completa debes aceptarla.\";\n                  break;\n                case \"Nonce error\":\n                  message = \"Error de nonce: El nonce de la cuenta elegida y de la transacción son diferentes.\";\n                  break;\n                case \"Gas insuficiente\":\n                  message = \"La operación llevó más gas que el que pusiste como límite.\";\n                  break;\n                default: \n                  message = \"Error desconocido\";\n                  break;\n              }\n            }\n            else {\n              title = \"Activación exitosa\";\n              message = \"¡La campaña ahora está activa!\\n Ya puedes subir novedades del proyecto y pedidos de presupuesto.\"; \n            }\n            this.setState({ changeTxLoading: false, \n                            message: message, \n                            showMessage: true, \n                            title: title});\n          });\n        }\n      }\n      catch(error)  {\n        console.log(error);\n      }\n  }\n\n  withdraw = async() =>  {\n    try {\n      const accounts = await campaignService.getAccounts();\n      if(accounts.length===0) {\n        const mssj = \"Para retirar fondos debes haber iniciado sesión en la wallet de metamask.\";\n        this.setState({ showMessage: true, message: mssj});\n        console.log(mssj);\n      }\n      else {\n        this.setState({ changeTxLoading: true});\n        campaignService.withdraw().then((statusResponse, receipt) => {\n          let title, message = \"\";\n          if (statusResponse.error) {\n            title = \"Hubo un error al retirar fondos\";\n            switch (statusResponse.errorMsg) {\n              case \"Acción denegada\":\n                message = \"Has denegado la acción a tráves de metamask. Para que este completa debes aceptarla.\";\n                break;\n              case \"Nonce error\":\n                message = \"Error de nonce: El nonce de la cuenta elegida y de la transacción son diferentes.\";\n                break;\n              case \"Gas insuficiente\":\n                message = \"La operación llevó más gas que el que pusiste como límite.\";\n                break;\n              default: \n                message = \"Error desconocido\";\n                break;\n            }\n          }\n          else {\n\n            const returnValues = statusResponse.res.events.WithdrawFounds.returnValues;\n            const contribution = returnValues.contribution;\n            const finalContributions = returnValues.finalContributions;\n            const remainingContributions = returnValues.remainingContributions;\n            const payment = returnValues.payment;\n\n            title = \"Retiro de fondos exitoso\";\n            message = `¡Ya has recibido tus fondos en tu cuenta!\\n \n                      Como contribuiste con ${contribution} wei, el total de contribuciones fue ${finalContributions} wei y el sobrante fue ${remainingContributions} wei se te han transferido ${payment} wei.\n                      Gracias por haber participado de esta campaña.`; \n            this.setState({ canWithdraw: false});\n          }\n          this.setState({ changeTxLoading: false, \n                          message: message, \n                          showMessage: true, \n                          title: title});\n        });\n      }\n    }\n    catch(error)  {\n      console.log(error);\n    }\n  }\n\n  handleMessageClose = () => this.setState({ showMessage: false});\n\n\n  componentDidMount = async() => {\n    this.actualizeProgressInfo();\n    const badge_status = fromStatusToBadgeClass(this.state.status);\n    this.setState({ badge_status: badge_status });\n    this.actualizeRol(this.state.isOwner, this.state.isMember);\n    this.setCanWithdraw();\n    \n    const actualizeInfo = async() => {this.actualizeContributionInfo()};\n    await campaignService.subscribeToNewContribution(actualizeInfo);\n    const actualizeBalanceInfo = async() => {this.actualizeBalanceInfo()};\n    await campaignService.subscribeToProposalRelease(actualizeBalanceInfo);\n    const actualizeWithdrawInfo = async() => {this.actualizeWithdrawInfo()};\n    await campaignService.subscribeToWithdraw(actualizeWithdrawInfo);\n  }\n\n  async componentDidUpdate(prevProps) {\n    if(this.props.data.status !== prevProps.data.status) {\n      await this.actualizeStatusInfo();\n      const balancesInfo = await campaignService.getBalancesInfo();\n      this.setState({ goal: balancesInfo.goal, \n                      finalContributions: balancesInfo.finalContributions, \n                      remainingContributions: balancesInfo.remainingContributions, \n                      balance: balancesInfo.balance });\n      this.setCanWithdraw();\n      this.actualizeProgressInfo();\n    }\n  }\n\n  getProgress(total,portion) {\n    const progress = (((parseInt(portion)/parseInt(total)))* 100).toFixed(2);\n    return Math.min(progress,100);\n  }\n\n  render() {\n\n    let images = [\"/images/prueba/prueba1.jpg\",\"/images/prueba/prueba2.jpg\",\"/images/prueba/prueba3.jpg\",\"/images/prueba/prueba4.jpg\"]\n    let descripcion = \"Lorem ipsum dolor sit amet consectetur adipiscing elit quis, condimentum odio class etiam justo euismod orci, lobortis cras aptent mauris nullam semper senectus. Etiam ligula malesuada sapien magna tincidunt scelerisque ridiculus vel, aenean aliquam arcu eget facilisis placerat cubilia nibh purus, eleifend mi sociis ad vitae nam tempor. Imperdiet arcu parturient libero suscipit accumsan erat convallis velit metus bibendum taciti, auctor neque felis per augue in maecenas vulputate enim. Montes senectus urna eros accumsan lobortis cras ante convallis lacus, volutpat ullamcorper platea fermentum morbi class hac laoreet pretium sagittis, luctus cursus pellentesque interdum sed nullam porta est. Morbi mattis tincidunt ligula ad blandit per varius vulputate lobortis, nam curae urna netus bibendum a non aenean, consequat ut nascetur mi viverra lectus ultrices dis. A magnis molestie ultrices suscipit euismod litora fames volutpat erat vehicula venenatis mattis neque nam interdum, tincidunt orci condimentum augue natoque magna libero arcu dui taciti mus sed hendrerit class.\"\n    let created_at = \"10/03/2021\"\n    let title = \"Este titulo está mockeado\"\n\n    if (this.props.ipfsData) {\n      images = this.props.ipfsData.images.map(path =>  ipfsService.getIPFSUrlFromPath(path));\n\n      descripcion = this.props.ipfsData.description\n      created_at = this.props.ipfsData.created_date\n      title = this.props.ipfsData.title\n    }\n    \n    return (  <div className=\"campaign-info\" id=\"general_data_container\"> \n                <h3 className=\"name\"> {title} \n                  <span className=\"c_index_info\"> ({this.props.data.c_index }) </span>\n                  { (this.state.rol) && \n                  <Label color=\"teal\">\n                    <span data-testid=\"rol\">\n                      { this.state.rol }\n                    </span>\n                  </Label>\n                  }\n                </h3> \n                <p className=\"aling-right\"> Fecha de creación {created_at}</p>\n                <ImagesDetail images={images}/>\n                <h5> Estado: <Badge variant={this.state.badge_status}> { this.state.status } </Badge> </h5>\n                <div className=\"main-info-campaign\">\n                  <div>\n                    <Icon fitted name='user circle'/> &nbsp;Owner:&nbsp; \n                    <a href={`https://rinkeby.etherscan.io/address/${this.props.data.owner}`}\n                       target=\"_blank\"\n                       rel=\"noopener noreferrer\"\n                       data-testid=\"owner\">\n                        { this.props.data.owner }\n                    </a>. \n                  </div>   \n                  <div>  <Icon fitted name='group' /> Cantidad de miembros: <span data-testid=\"membersCount\">{ this.state.membersCount }</span>. </div>\n                </div>\n                \n                <p className=\"description\"> {descripcion} </p>\n                <hr/>\n                \n                <h5> Contribuciones </h5>\n                { this.state.status===\"Creada\" ?\n                  <div> Para que esta campaña comience se deben recaudar <Label color=\"green\"> <span data-testid=\"goal\">{ this.state.goal }</span> wei </Label> o más. </div> :\n                  <div> Para poder comenzar esta campaña debía recaudar al menos <Label color=\"green\"> <span data-testid=\"goal\">{ this.state.goal }</span> wei </Label> y recaudó <Label color=\"green\"> <span data-testid=\"finalContributions\">{ this.state.finalContributions }</span> wei </Label> . </div>\n                }\n                <div> La contribución mínima { this.state.status===\"Creada\" ? \"es\" : \"fue\" } de <Label color=\"teal\"><span data-testid=\"minimunContribution\">{ this.props.data.minimunContribution }</span> wei</Label></div> \n                { (this.state.status===\"Cerrada\" || this.state.status===\"Exitosa\")  &&\n                    <div> Los fondos sobrantes al cerrar la campaña fueron de <Label color=\"green\"> <span data-testid=\"remainingContributions\">{ this.state.remainingContributions }</span> wei </Label> . </div>\n                }\n                <div className=\"progress-container\">\n                  { this.state.status===\"Creada\" ?\n                      <ProgressBar variant=\"info\" now={this.state.progress} label={`${this.state.balance} wei contribuidos`} /> :\n                    <div>\n                      <h5> Fondos </h5>\n                       <ProgressBar variant=\"info\" now={this.state.progress} label={`${this.state.balance} wei restantes`} />\n                    </div>\n                  }\n                </div>\n              \n                { (!this.state.isMember) && (!this.state.isOwner) && this.state.status===\"Creada\"\n                  &&  \n                  <div className=\"contribute-row\" data-testid=\"contribution-row\">\n                     <ContributeModal \n                      minimunContribution={this.props.data.minimunContribution}\n                      contributeLoading={false}/>\n                  </div> }\n\n                { this.state.showMessage &&\n                  <MessageModal\n                    showMessage={this.state.showMessage}\n                    handleMessageClose={this.handleMessageClose}\n                    message={this.state.message}\n                    title={this.state.title} />\n                }\n\n                { this.state.isMember && (!this.state.isOwner) && this.state.canWithdraw && \n                  ((this.state.status === \"Cerrada\") || (this.state.status === \"Exitosa\")) &&\n                  <div>\n                    <Button\n                      loading={this.state.changeTxLoading}\n                      className=\"normal-button\"\n                      onClick={this.withdraw}\n                      data-testid=\"withdraw\">\n                        Retirar fondos\n                    </Button>\n                  </div>\n                }\n\n                { this.state.progress >= 100 && this.state.isOwner && this.state.status===\"Creada\"\n                  &&\n                    <div>\n                      <Button\n                        loading={this.state.changeTxLoading}\n                        className=\"normal-button\"\n                        onClick={this.activeCampaign}\n                        data-testid=\"changeActiveButton\">\n                          Activar campaña\n                      </Button>\n                    </div>\n                }\n\n              </div>);\n  }\n}\n\nexport default DisplayContent;","\nimport React from \"react\";\nimport { Card, Icon } from 'semantic-ui-react'\n\nclass CardProposal extends React.Component {\n\n  render() {\n      return (  <div className=\"proposal-item-list\">\n                    <Card>\n                        <Card.Content header={this.props.title} data-testid=\"title\"/>\n                        <Card.Content description={this.props.description.substring(0,250)+\"...\"} data-testid=\"description\"/>\n                        <Card.Content extra>\n                          <Icon name='calendar alternate outline' />\n                          <span data-testid=\"proposal_date\">{this.props.proposal_date}></span>\n                        </Card.Content>\n                    </Card>\n                </div>);\n    }\n  }\n  \n  export default CardProposal;\n\n","import React from \"react\";\nimport { Badge } from \"react-bootstrap\";\nimport { Label }  from 'semantic-ui-react';\nimport { fromStatusToBadgeClass, fromIntToStatusProposal } from \"../../helpers/utils.js\";\n\nclass ProposalDetail extends React.Component {\n\n  state = {\n    proposal_data: {},\n    loaded: false,\n  };\n\n  setProposalData() {\n    const proposal_data = {\n      recipient: this.props.recipient,\n      value: this.props.value,\n      approvalsCount: this.props.approvalsCount,\n      disapprovalsCount: this.props.disapprovalsCount,\n      status: fromIntToStatusProposal(this.props.status),\n      limitTime: new Date(this.props.limitTime * 1000).toLocaleDateString('en-GB'),\n      badge_status: fromStatusToBadgeClass(fromIntToStatusProposal(this.props.status))\n    }\n    this.setState({ proposal_data: proposal_data  });\n  }\n\n  componentDidUpdate(prevProps) {\n    if((this.props.status !== prevProps.status) || (this.props.hasVoted !== prevProps.hasVoted )) {\n      this.setState({ loaded: false });\n      this.setProposalData();\n    }\n  }\n\n  componentDidMount = async() => {\n    try { \n      this.setProposalData();\n      this.setState({\n          loaded: true,\n      });\n    } catch (error) {\n        console.error(error);\n    }\n  }\n\n  render() {\n    return (  <div className=\"proposal-detail\">            \n                <h3 className=\"title\" data-testid=\"titulo\"> {this.props.title} \n                  { (this.props.hasVoted) && \n                    <Label color=\"teal\">\n                      <span data-testid=\"voted\">\n                        Votaste este pedido\n                      </span>\n                    </Label>\n                  }\n                </h3>\n                <p className=\"aling-right\"> Fecha de creación <span data-testid=\"fecha_creacion\">{this.props.proposal_date}</span></p>\n                <h5 data-testid=\"estado\"> Estado: <Badge variant={this.state.proposal_data.badge_status}> { this.state.proposal_data.status } </Badge> </h5>\n                <h5> Fecha de cierre de votación:  <span data-testid=\"limite\">{ this.state.proposal_data.limitTime }</span></h5>\n                <p className=\"description\" data-testid=\"descripcion\"> {this.props.description} </p>\n                <hr style={{marginLeft: \"6em\", marginRight: \"6em\",  marginTop: \"1.5em\",  marginBottom: \"1.5em\"}}/>\n              \n                <h5> Datos de transferencia:</h5>\n                <div> Los fondos a retirar para de este pedido son <Label color=\"green\"> <span data-testid=\"valor\">{ this.state.proposal_data.value }</span></Label> wei. </div>\n                <div> \n                    Destinatario:&nbsp; \n                    <a href={`https://rinkeby.etherscan.io/address/${this.state.proposal_data.recipient}`}\n                       target=\"_blank\"\n                       rel=\"noopener noreferrer\" \n                       data-testid=\"destinatario\">\n                        { this.state.proposal_data.recipient }\n                    </a>\n                </div> \n              </div>);\n  }\n}\n\nexport default ProposalDetail;","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { Dimmer, Loader, Icon, Pagination, Button, Label }  from 'semantic-ui-react'\n\n\nimport CardProposal from \"./CardProposal.js\";\nimport ProposalDetail from \"./ProposalDetail.js\";\nimport MessageModal from \"../modals/MessageModal\"\n\nimport { campaignService } from \"../../services/campaignService.js\"\nimport { ipfsService } from \"../../services/ipfsService.js\"\n\nclass DisplayProposals extends React.Component {\n\n  state = {\n    active: this.props.active,\n    proposal_data: {},\n    proposal_data_i: 0,\n    pastProposals: [],\n    proposals: [],\n    loaded: false,\n    activePage:1,\n    totalProposals: 0,\n    totalPages: 0,\n    per_page: 3,\n    loadingClose: false,\n    loadingVote: false,\n    loadingTansfer: false,\n    showMessage: false    \n  };\n\n  async getProposals(activePage) {\n    const allProposals = this.state.pastProposals;\n    const proposals = []\n    const i_proposal = this.state.totalProposals - 1 - ((activePage-1)*(this.state.per_page));\n    const last_i = Math.max(-1, i_proposal - (this.state.per_page));\n    \n    for(let i=i_proposal; (i >= 0 && i > last_i) ; i--){\n      const pHash = allProposals[i];\n      const ipfsPath = ipfsService.getIPFSHash(pHash);\n      const ipfsData = await ipfsService.getJsonFromIPFSHash(ipfsPath); \n      proposals.push({\n          \"index_proposal\": i,\n          \"title\": ipfsData.title, \n          \"description\": ipfsData.description ,\n          \"proposal_date\": ipfsData.created_date\n        });\n    }\n\n    this.setState({\n      loaded: true,\n      proposals: proposals\n    });\n  }\n\n  handlePaginationChange = (e, { activePage }) => {\n    this.setState({ activePage: activePage, loaded: false });\n    this.getProposals(activePage);\n  }\n\n  handleMessageClose = () => this.setState({ showMessage: false});\n\n  async setProposalData(index) {\n    if (this.state.proposals.length > index) {\n      this.setState({ loaded: false });\n      const proposalData = this.state.proposals[index];\n      const proposalInfo = await campaignService.getProposalInfo(proposalData[\"index_proposal\"]);\n      proposalData[\"recipient\"] = proposalInfo.recipient;\n      proposalData[\"value\"] = proposalInfo.value;\n      proposalData[\"approvalsCount\"] = proposalInfo.approvalsCount;\n      proposalData[\"disapprovalsCount\"] = proposalInfo.disapprovalsCount;\n      proposalData[\"status\"] = proposalInfo.status;\n      proposalData[\"limitTime\"] = proposalInfo.limitTime;\n      proposalData[\"hasVoted\"] = proposalInfo.senderHasVote;\n      const campaignActive = (this.props.campaignStatus !== \"Cerrada\") && (this.props.campaignStatus !== \"Exitosa\")\n      const canVote = campaignActive && (!this.props.isOwner) && this.props.isMember && proposalInfo.inTime && (!proposalInfo.senderHasVote);\n      const canClose = campaignActive && (this.props.isMember || this.props.isOwner) && !(proposalInfo.inTime) && proposalInfo.status==='0';\n      const canRelease = campaignActive && this.props.isOwner && proposalInfo.status==='1';\n      this.setState({ proposal_data_i: index, \n                      proposal_data : proposalData, \n                      canVote: canVote, \n                      canClose: canClose,\n                      canRelease: canRelease,\n                      loaded:true });\n    }\n  }\n\n  async showProposal(index) {\n    await this.setProposalData(index);\n    this.setState({ active: \"proposals_detail\"});\n  }\n  \n  async disapprove() {\n    this.setState({ loadingVote: true});\n    const index = this.state.proposal_data[\"index_proposal\"];\n    campaignService.disapproveProposal(index).then((statusResponse) => {\n      let title, message = \"\";\n      if (statusResponse.error) {\n        title = \"Hubo un error al votar\";\n        switch (statusResponse.errorMsg) {\n          case \"Acción denegada\":\n            message = \"Has denegado la acción a tráves de metamask. Para que este completa debes aceptarla.\";\n            break;\n          case \"Nonce error\":\n            message = \"Error de nonce: El nonce de la cuenta elegida y de la transacción son diferentes.\";\n            break;\n          case \"Gas insuficiente\":\n            message = \"La operación llevó más gas que el que pusiste como límite.\";\n            break;\n          default: \n            message = \"Error desconocido\";\n            break;\n        }\n      }\n      else {\n        title = \"Votación exitosa\";\n        message = \"¡Tu voto se envió de manera exitosa!\\n ¡Gracias por tu compromiso!\";\n        this.setState({ canVote: false}); \n      }\n      this.setState({ loadingVote: false, \n                      message_m: message, \n                      showMessage: true, \n                      title_m: title});\n      });\n  }\n\n  async approve() {\n    this.setState({ loadingVote: true});\n    const index = this.state.proposal_data[\"index_proposal\"];\n    campaignService.approveProposal(index).then((statusResponse) => {\n      let title, message = \"\";\n      if (statusResponse.error) {\n        title = \"Hubo un error al votar\";\n        switch (statusResponse.errorMsg) {\n          case \"Acción denegada\":\n            message = \"Has denegado la acción a tráves de metamask. Para que este completa debes aceptarla.\";\n            break;\n          case \"Nonce error\":\n            message = \"Error de nonce: El nonce de la cuenta elegida y de la transacción son diferentes.\";\n            break;\n          case \"Gas insuficiente\":\n            message = \"La operación llevó más gas que el que pusiste como límite.\";\n            break;\n          default: \n            message = \"Error desconocido\";\n            break;\n        }\n      }\n      else {\n        title = \"Votación exitosa\";\n        message = \"¡Tu voto se envió de manera exitosa!\\n ¡Gracias por tu compromiso!\"; \n        this.setState({ canVote: false}); \n      }\n      this.setState({ loadingVote: false, \n                      message_m: message, \n                      showMessage: true, \n                      title_m: title});\n    });\n\n  }\n\n  async closeProposal() {\n\n    this.setState({ loadingClose: true});\n    const index = this.state.proposal_data[\"index_proposal\"];\n\n    campaignService.closeProposal(index).then((statusResponse) => {\n      let title, message = \"\";\n\n      if (statusResponse.error) {\n        title = \"Hubo un error al cerrar el pedido\";\n        switch (statusResponse.errorMsg) {\n          case \"Acción denegada\":\n            message = \"Has denegado la acción a tráves de metamask. Para que este completa debes aceptarla.\";\n            break;\n          case \"Nonce error\":\n            message = \"Error de nonce: El nonce de la cuenta elegida y de la transacción son diferentes.\";\n            break;\n          case \"Gas insuficiente\":\n            message = \"La operación llevó más gas que el que pusiste como límite.\";\n            break;\n          default: \n            message = \"Error desconocido\";\n            break;\n        }\n      }\n      else {\n        title = \"Cierre exitoso\";\n        message = \"¡El cierre del pedido se envío de manera exitosa!\"; \n        this.setState({ canClose: false}); \n      }\n\n      this.setState({ loadingClose: false, \n                      message_m: message, \n                      showMessage: true, \n                      title_m: title});\n    });\n\n  }\n\n  async release() {\n    this.setState({ loadingTansfer: true});\n    const index = this.state.proposal_data[\"index_proposal\"];\n    campaignService.release(index).then((statusResponse) => {\n      let title, message = \"\";\n      if (statusResponse.error) {\n        title = \"Hubo un error al cerrar el pedido\";\n        switch (statusResponse.errorMsg) {\n          case \"Acción denegada\":\n            message = \"Has denegado la acción a tráves de metamask. Para que este completa debes aceptarla.\";\n            break;\n          case \"Nonce error\":\n            message = \"Error de nonce: El nonce de la cuenta elegida y de la transacción son diferentes.\";\n            break;\n          case \"Gas insuficiente\":\n            message = \"La operación llevó más gas que el que pusiste como límite.\";\n            break;\n          default: \n            message = \"Error desconocido\";\n            break;\n        }\n      }\n      else {\n        title = \"Retiro exitoso\";\n        message = \"¡El retiro de fondos se envío de manera exitosa!\\nRevisa tu wallet para ver los fondos agregados.\"; \n        this.setState({ canRelease: false}); \n      }\n      this.setState({ loadingTansfer: false, \n                      message_m: message, \n                      showMessage: true, \n                      title_m: title});\n    });\n  }\n\n  componentDidMount = async() => {\n    try {\n      this.setState({ loaded: false });\n      const pastProposals = await campaignService.getProposals();\n      this.setState({ pastProposals : pastProposals.map(pu =>  pu.returnValues[0]), \n                      totalProposals: pastProposals.length,\n                      totalPages: Math.ceil(pastProposals.length/this.state.per_page) });\n      await this.getProposals(1);\n      const actualizeProposalInfo = async() => {this.setProposalData(this.state.proposal_data_i)};\n      await campaignService.subscribeToVoteProposal(actualizeProposalInfo);\n      await campaignService.subscribeToClosedProposal(actualizeProposalInfo);\n      await campaignService.subscribeToProposalRelease(actualizeProposalInfo);\n\n    } catch (error) {\n        console.error(error);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.campaignStatus !== prevProps.campaignStatus) {\n      this.setProposalData(this.state.proposal_data_i);\n    }\n  }\n\n  render() {\n    let proposal_nodes = []\n      for (const [index, proposal] of this.state.proposals.entries()) {\n        proposal_nodes.push(\n          <Col lg={4} className=\"invisible_button\"\n          key={index}\n          onClick={() => { this.showProposal(index) }}>\n            <CardProposal \n              title={proposal.title}\n              description={proposal.description}\n              proposal_date={proposal.proposal_date}\n            />\n          </Col>\n        )\n    }\n\n    return (  <div className=\"proposal-info\" id=\"proposals_container\" style={{display: \"none\"}}> \n\n                {!this.state.loaded && \n                  <Dimmer active>\n                    { this.state.active===\"proposals_list\" ?\n                    <h1 data-testid=\"info-loading\"> Obteniendo los pedidos de presupuesto... </h1> :\n                    <h1 data-testid=\"info-loading\"> Obteniendo detalle de pedido de presupuesto... </h1>\n                    }\n                    <Loader size='large' inline>Cargando...</Loader>\n                  </Dimmer>\n                }\n\n                { this.state.showMessage && this.state.loaded &&\n                  <MessageModal\n                  showMessage={this.state.showMessage}\n                  handleMessageClose={this.handleMessageClose}\n                  message={this.state.message_m}\n                  title={this.state.title_m} />\n                }           \n                \n                { this.state.active===\"proposals_list\" && proposal_nodes.length>0 && this.state.loaded &&\n                <div>\n                  <Row  id=\"proposals_list\">\n                  {proposal_nodes}                \n                  </Row> \n                  <Row className=\"justify-content-md-center\">\n                    <Pagination\n                      activePage={this.state.activePage}\n                      onPageChange={this.handlePaginationChange}\n                      totalPages={this.state.totalPages}\n                    />\n                  </Row>\n                </div>}\n\n                { this.state.active===\"proposals_list\" && proposal_nodes.length===0 && this.state.loaded &&\n                  <div>  \n                      <h1> Aún no hay pedidos de presupuesto para mostrar. </h1>\n                      <p> No dejes de estar pendiente a los nuevos pedidos que puedan aparecer.</p>\n                  </div>\n                }\n                \n                { this.state.active===\"proposals_detail\" && this.state.loaded &&\n                  <div  id=\"proposals_detail\">\n                    <ProposalDetail\n                      index_proposal={this.state.proposal_data.index_proposal}\n                      title={this.state.proposal_data.title}\n                      description={this.state.proposal_data.description}\n                      proposal_date={this.state.proposal_data.proposal_date}\n                      isMember={this.props.isMember}\n                      isOwner={this.props.isOwner}\n                      recipient={this.state.proposal_data.recipient}\n                      value={this.state.proposal_data.value}\n                      approvalsCount={this.state.proposal_data.approvalsCount}\n                      disapprovalsCount={this.state.proposal_data.disapprovalsCount}\n                      status={this.state.proposal_data.status}\n                      limitTime={this.state.proposal_data.limitTime}\n                      hasVoted={this.state.proposal_data.hasVoted} />\n                  \n                    <div>\n                      <Row className=\"proposal-footer\">\n                        <Col lg={6} className=\"aling-left\">\n                          <Button as='div' labelPosition='right' \n                          disabled={ this.state.loadingVote ||  !this.state.canVote }\n                          onClick= {() => { this.approve()  }}>\n                            <Button icon>\n                              <Icon name='thumbs up'/>\n                              &nbsp;{ this.state.canVote ? 'Aprobar' : 'Aprobados'}\n                            </Button>\n                            <Label as='a' basic pointing='left'>\n                              {this.state.proposal_data.approvalsCount}\n                            </Label>\n                          </Button>\n                        </Col>\n                        <Col lg={6} className=\"aling-right\">\n                          <Button as='div' labelPosition='left' \n                          disabled={ this.state.loadingVote ||  !this.state.canVote }\n                          onClick= {() => { this.disapprove()  }}>\n                            <Label as='a' basic pointing='right'>\n                              {this.state.proposal_data.disapprovalsCount}\n                            </Label>\n                            <Button icon>\n                              <Icon name='thumbs down'/>\n                              &nbsp;{ this.state.canVote ? 'Desaprobar' : 'Desaprobados'}\n                            </Button>\n                          </Button>\n                        </Col>\n                      </Row>\n                  </div>\n                \n                  <hr style={{margin: \"2em\"}}/>\n                      <Row className=\"proposal-footer\">\n                        <Col lg={6} className=\"aling-left\">\n                          <Button className=\"normal-button no-margin\"\n                          onClick={() => { this.setState({ active: \"proposals_list\"})  }}>\n                            <Icon name='angle left' /> Volver\n                          </Button>\n                        </Col>\n                        { this.state.canClose &&\n                        <Col lg={6} className=\"aling-right\">\n                          <Button\n                          loading={this.state.loadingClose}\n                          className=\"normal-button no-margin\"                          \n                          data-testid=\"closeProposalButton\"\n                          onClick= {() => { this.closeProposal()  }}>\n                            Cerrar Pedido\n                          </Button>\n                        </Col>\n                        }\n                        { this.state.canRelease &&\n                        <Col lg={6} className=\"aling-right\">\n                          <Button\n                          loading={this.state.loadingTansfer}\n                          className=\"normal-button no-margin\"                          \n                          data-testid=\"transfer\"\n                          onClick= {() => { this.release()  }}>\n                            Transferir fondos\n                          </Button>\n                        </Col>\n                        }\n                      </Row>\n                </div>\n              }\n              </div>\n            );\n  }\n}\n\nexport default DisplayProposals;","\nimport React from \"react\";\nimport { Item, Icon } from 'semantic-ui-react'\n\n\nclass ItemProgressUpdates extends React.Component {\n\n    render() {\n      return ( \n                <Item>\n                  <Item.Image size='small' src={this.props.image} />\n                  <Item.Content onClick={this.props.onClick} className=\"div-clickleable\">\n                    <Item.Header data-testid=\"title\">{this.props.title}</Item.Header>\n                    <Item.Meta>Description</Item.Meta>\n                    <Item.Description data-testid=\"description\">\n                      {this.props.description.substring(0,200)+\"...\"}\n                    </Item.Description>\n                    <Item.Extra>\n                      <div className=\"aling-right\">\n                        <Icon name='calendar alternate outline' />\n                          <span data-testid=\"progress_date\">{this.props.progress_update_date}</span>\n                      </div>\n                    </Item.Extra>\n                    <hr/>\n                  </Item.Content>\n                </Item>);\n    }\n  }\n  \n  export default ItemProgressUpdates;\n\n","import React from \"react\";\nimport { Carousel } from \"react-bootstrap\";\n\nclass CarrouselImages extends React.Component {\n\n    render() {\n    var itemsCarrousel = []\n    for (const [index, image] of this.props.images.entries()) {\n        itemsCarrousel.push(\n            <Carousel.Item key={index}>\n                <img\n                data-testid=\"carousel-image\"\n                className=\"d-block w-100\"\n                src={image}\n                alt=\"progressImage\"\n                />\n                <Carousel.Caption>\n                    <h3>Imagen {index+1}</h3>\n                </Carousel.Caption>\n            </Carousel.Item>);\n    }\n  \n      return (  <Carousel>\n                    {itemsCarrousel}\n                </Carousel>);\n  }\n}\n\nexport default CarrouselImages;","import React from \"react\";\nimport CarrouselImages from \"./CarrouselImages\"\nimport { Col, Row } from \"react-bootstrap\";\n\n\nclass ProgressUpdateDetail extends React.Component {\n\n  render() {\n    return (  <div className=\"proposal-detail\">            \n                <h3 className=\"title\" data-testid=\"titulo\"> {this.props.title} </h3>\n                <p className=\"aling-right\"> Fecha de creación <span data-testid=\"fecha_creacion\">{this.props.progress_update_date}</span></p>\n                <Row>\n                <div>\n                { this.props.images.length > 0 &&\n                  <Col lg={5} className=\"image-container-left\" data-testid=\"images\">\n                    <CarrouselImages images={this.props.images}/>\n                  </Col>\n                }\n                  <p className=\"description pull-left\" data-testid=\"descripcion\"> {this.props.description} </p>\n                </div>\n                </Row>\n              </div>);\n  }\n}\n\nexport default ProgressUpdateDetail;","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { Dimmer, Loader, Icon, Item, Pagination }  from 'semantic-ui-react'\n\nimport ItemProgressUpdates from \"./ItemProgressUpdates.js\";\nimport ProgressUpdateDetail from \"./ProgressUpdateDetail.js\";\n\nimport { campaignService } from \"../../services/campaignService.js\"\nimport { ipfsService } from \"../../services/ipfsService.js\"\n\n\nclass DisplayProgressUpdates extends React.Component {\n\n  state = {\n    active: this.props.active,\n    progress_update_data: {},\n    progress_updates: [],\n    pastProgressUpdates: [],\n    totalPages: 0,\n    totalProgressUpdates: 0,\n    loaded: false,\n    per_page: 4,\n    activePage:1\n  };\n\n  async getProgressUpdates(activePage) {  \n    this.setState({ loaded: false });\n    const allProgressUpdates = this.state.pastProgressUpdates;\n    const progress_updates = []\n    const i_progress_update = this.state.totalProgressUpdates - 1 - ((activePage-1)*(this.state.per_page));\n    const last_i = Math.max(-1, i_progress_update - (this.state.per_page));\n    for(let i=i_progress_update; (i >= 0 && i > last_i) ; i--){\n      const puHash = allProgressUpdates[i];\n      const ipfsPath = ipfsService.getIPFSHash(puHash);\n      const ipfsData = await ipfsService.getJsonFromIPFSHash(ipfsPath);\n      progress_updates.push({\n          \"index_progress_update\": i,\n          \"title\": ipfsData.title, \n          \"description\": ipfsData.description ,\n          \"progress_update_date\": ipfsData.created_date,\n          \"images\": ipfsData.images.map(path =>  ipfsService.getIPFSUrlFromPath(path))\n        });\n    }\n    \n    this.setState({\n      loaded: true,\n      progress_updates: progress_updates\n    });\n\n  }\n\n  handlePaginationChange = (e, { activePage }) => {\n    this.setState({ activePage: activePage, loaded: false });\n    this.getProgressUpdates(activePage);\n  }\n\n  showProgressUpdate(index) {\n    this.setState({ progress_update_data : this.state.progress_updates[index]});\n    this.setState({ active: \"progress_update_detail\"});\n  }\n\n  componentDidMount = async() => {\n    try {\n      this.setState({ loaded: false });\n      const pastProgressUpdates = await campaignService.getProgressUpdates();\n      this.setState({ pastProgressUpdates : pastProgressUpdates.map(pu =>  pu.returnValues[0]), \n                      totalProgressUpdates: pastProgressUpdates.length,\n                      totalPages: Math.ceil(pastProgressUpdates.length/this.state.per_page) });\n      await this.getProgressUpdates(1);\n    } catch (error) {\n        console.error(error);\n    }\n};\n\n  render() {\n    var progress_updates_nodes = []\n      for (const [index, progress_update] of this.state.progress_updates.entries()) {\n        progress_updates_nodes.push(\n            <ItemProgressUpdates\n              key={index}\n              title={progress_update.title}\n              description={progress_update.description}\n              image={progress_update.images[0]}\n              progress_update_date={progress_update.progress_update_date}\n              onClick={() => { this.showProgressUpdate(index) }}\n            />)\n      }\n\n    return (  <div className=\"proposal-info\" id=\"progress_container\" style={{display: \"none\"}}>            \n                {!this.state.loaded && \n                  <Dimmer active>\n                    <h1 data-testid=\"info-loading\"> Obteniendo los avances publicados... </h1>\n                    <Loader size='large' inline>Cargando...</Loader>\n                  </Dimmer>\n                }\n                \n                { this.state.active===\"progress_updates_list\" && progress_updates_nodes.length>0 && this.state.loaded && \n                  <div>\n                    <Row  id=\"progress_updates_list\">\n                      <Item.Group>\n                        {progress_updates_nodes}\n                      </Item.Group>           \n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                      <Pagination\n                        activePage={this.state.activePage}\n                        onPageChange={this.handlePaginationChange}\n                        totalPages={this.state.totalPages}\n                      />\n                    </Row>\n                  </div>\n                }\n\n                { this.state.active===\"progress_updates_list\" && progress_updates_nodes.length===0 && this.state.loaded && \n                  <div>  \n                      <h1> Aún no hay avances del proyecto para mostrar. </h1>\n                      <p> No dejes de estar pendiente a las nuevas actualizaciones que el owner pueda subir.</p>\n                  </div>\n                }\n                \n                \n                { this.state.active===\"progress_update_detail\" && this.state.loaded && \n                  <div  id=\"progress_update_detail\">\n                    <ProgressUpdateDetail\n                    title={this.state.progress_update_data.title}\n                    description={this.state.progress_update_data.description}\n                    progress_update_date={this.state.progress_update_data.progress_update_date}\n                    images={this.state.progress_update_data.images}/>   \n                    <Row className=\"proposal-footer\">\n                      <Col lg={6} className=\"aling-left\">\n                        <button className=\"normal-button\"\n                        onClick={() => { this.setState({ active: \"progress_updates_list\"})  }}>\n                          <Icon name='angle left' /> Volver\n                        </button>\n                      </Col>\n                    </Row>\n                  </div>\n                }\n              </div>\n              );\n  }\n}\n\nexport default DisplayProgressUpdates;","\nimport React from \"react\";\nimport { Card, Icon } from 'semantic-ui-react'\n\nclass CardCloseProposal extends React.Component {\n\n    render() {\n      return (  <div className=\"proposal-item-list\">\n                    <Card>\n                        <Card.Content header={this.props.title} data-testid=\"title\"/>\n                        <Card.Content description={this.props.description.substring(0,150)+\"...\"} data-testid=\"description\"/>\n                        <Card.Content extra>\n                          <Icon name='calendar alternate outline' />\n                          <span data-testid=\"dproposal_date\">{this.props.dproposal_date}></span>\n                        </Card.Content>\n                    </Card>\n                </div>);\n    }\n  }\n  \n  export default CardCloseProposal;\n\n","import React from \"react\";\nimport { Badge } from \"react-bootstrap\";\nimport { Label }  from 'semantic-ui-react';\nimport { fromStatusToBadgeClass, fromIntToStatusProposal } from \"../../helpers/utils.js\";\n\nclass CloseProposalDetail extends React.Component {\n\n  state = {\n    dproposal_data: {},\n    loaded: false,\n  };\n\n  setDProposalData() {\n    const dproposal_data = {\n      approvalsCount: this.props.approvalsCount,\n      disapprovalsCount: this.props.disapprovalsCount,\n      status: fromIntToStatusProposal(this.props.status),\n      limitTime: new Date(this.props.limitTime * 1000).toLocaleDateString('en-GB'),\n      badge_status: fromStatusToBadgeClass(fromIntToStatusProposal(this.props.status))\n    }\n    this.setState({ dproposal_data: dproposal_data  });\n  }\n\n  componentDidUpdate(prevProps) {\n    if((this.props.status !== prevProps.status) || (this.props.hasVoted !== prevProps.hasVoted )) {\n      this.setState({ loaded: false });\n      this.setDProposalData();\n    }\n  }\n\n  componentDidMount = async() => {\n    try {\n      this.setDProposalData();\n      this.setState({\n          loaded: true,\n      });\n    } catch (error) {\n        console.error(error);\n    }\n  }\n\n  render() {\n    return (  <div className=\"proposal-detail\">            \n                <h3 className=\"title\" data-testid=\"titulo\"> {this.props.title} \n                  { (this.props.hasVoted) && \n                    <Label color=\"teal\">\n                      <span data-testid=\"voted\">\n                        Votaste este pedido\n                      </span>\n                    </Label>\n                  }\n                </h3>\n                <p className=\"aling-right\"> Fecha de creación <span data-testid=\"fecha_creacion\">{this.props.dproposal_date}</span></p>\n                <h5 data-testid=\"estado\"> Estado: <Badge variant={this.state.dproposal_data.badge_status}> { this.state.dproposal_data.status } </Badge> </h5>\n                <h5> Fecha de cierre de votación:  <span data-testid=\"limite\">{ this.state.dproposal_data.limitTime }</span></h5>\n                <h5> \n                    Autor:&nbsp; \n                    <a href={`https://rinkeby.etherscan.io/address/${this.props.author}`}\n                       target=\"_blank\"\n                       rel=\"noopener noreferrer\" \n                       data-testid=\"destinatario\">\n                        { this.props.author }\n                    </a>&nbsp;\n                    { (this.props.authorOwner) ? \n                    <Label color=\"green\">\n                      <span data-testid=\"voted\">\n                        Owner\n                      </span>\n                    </Label>:\n                     <Label color=\"red\">\n                     <span data-testid=\"voted\">\n                       Miembro\n                     </span>\n                   </Label>\n                  }\n                </h5> \n                <p className=\"description\" data-testid=\"descripcion\"> {this.props.description} </p>\n                <hr style={{marginLeft: \"6em\", marginRight: \"6em\",  marginTop: \"1.5em\",  marginBottom: \"1.5em\"}}/>\n              </div>);\n  }\n}\n\nexport default CloseProposalDetail;","import React from \"react\";\nimport { Modal, Col, Form } from \"react-bootstrap\";\nimport { Button } from \"semantic-ui-react\";\nimport MessageModal from \"../modals/MessageModal\"\n\nimport { campaignService } from \"../../services/campaignService.js\"\nimport { ipfsService } from \"../../services/ipfsService.js\"\n\nclass ClosePorposalModal extends React.Component {\n\n  state = {\n    show: false,\n    cpTitle: '',\n    cpDescription: '',\n    showMessage: false,\n    message: \"\",\n    createCPLoading: this.props.createCPLoading\n  };\n\n  create = async() =>  {\n    if (true){\n      try {\n        const accounts = await campaignService.getAccounts();\n        if(accounts.length===0) {\n          const mssj = \"Para crear un pedido debes haber iniciado sesión en la wallet de metamask.\";\n          this.setState({ showMessage: true, message: mssj});\n          console.log(mssj);\n        }\n        else if (this.state.cpTitle.length < \"5\" || this.state.cpTitle.length > \"30\") {\n          this.setState({ createCPLoading: false, \n            message: \"El título debe tener entre 5 y 30 caracteres.\", \n            showMessage: true, \n            title: \"Error\"});\n        }\n        else if (this.state.cpDescription.length < \"25\" || this.state.cpDescription.length > \"1000\") {\n          this.setState({ createCPLoading: false, \n            message: \"La descripción debe tener entre 25 y 1000 caracteres.\", \n            showMessage: true, \n            title: \"Error\"});\n        }\n        else {\n          this.setState({ createCPLoading: true});\n          this.handleClose();\n          const dateToday = new Date().toLocaleDateString('en-GB'); \n          const json_value =  {\n            \"title\": this.state.cpTitle, \n            \"description\": this.state.cpDescription ,\n            \"created_date\": dateToday\n          }\n          const ipfsHash = await ipfsService.addJson(json_value)\n          const bytes32Hash = ipfsService.getBytes32Hash(ipfsHash);\n\n          campaignService.createCloseProposal(bytes32Hash).then((statusResponse) => {\n            let title, message = \"\";\n            if (statusResponse.error) {\n              title = \"Hubo un error al crear elpedido\";\n              switch (statusResponse.errorMsg) {\n                case \"Acción denegada\":\n                  message = \"Has denegado la acción a tráves de metamask. Para que este completa debes aceptarla.\";\n                  break;\n                case \"Nonce error\":\n                  message = \"Error de nonce: El nonce de la cuenta elegida y de la transacción son diferentes.\";\n                  break;\n                case \"Gas insuficiente\":\n                  message = \"La operación llevó más gas que el que pusiste como límite.\";\n                  break;\n                default: \n                  message = \"Error desconocido\";\n                  break;\n              }\n            }\n            else {\n              title = \"Creación exitosa\";\n              message = \"¡Tu pedido de cierre fue creado correctamente!\\n ¡Gracias por involucrarte con la campaña!\"; \n            }\n            this.setState({ createCPLoading: false, \n                            message: message, \n                            showMessage: true, \n                            title: title});\n          });\n        }\n      }\n      catch(error)  {\n        console.log(error);\n      }\n    }\n    else {\n      const msg = \"La contribución debe ser mayor a la mínima\";\n      this.setState({ message: msg, showMessage:true});\n    }\n  }\n\n  handleClose = () => this.setState({ show: false});\n  \n  handleShow = () => this.setState({ show: true});\n\n  handleMessageClose = () => this.setState({ showMessage: false});\n\n  render() {\n    return (\n      <div>\n\n        { this.state.showMessage &&\n          <MessageModal\n          showMessage={this.state.showMessage}\n          handleMessageClose={this.handleMessageClose}\n          message={this.state.message}\n          title={this.state.title} />\n        }\n      \n        <Button\n        loading={this.state.createCPLoading}\n        className=\"normal-button no-margin-top\"\n        onClick={this.handleShow}\n        data-testid=\"closeProposalButton\">\n              Crear pedido\n        </Button>\n        \n        <Modal show={this.state.show} onHide={this.handleClose}\n        data-testid=\"closeProposalModal\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered>\n          <Modal.Header closeButton>\n            <Modal.Title id=\"contained-modal-title-vcenter\">Nuevo Pedido de cierre</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n              <Form>\n                  <Form.Group controlId=\"contributeBasicForm\">\n                      <Form.Label>Título</Form.Label>\n                      <Form.Control placeholder=\"Titulo pedido de cierre\" onChange={event => this.setState({ cpTitle: event.target.value})}/>\n                      <Form.Text className=\"text-muted\">\n                      *.\n                      </Form.Text>\n                  </Form.Group>\n                  <Form.Group controlId=\"contributeBasicForm\">\n                      <Form.Label>Descripción</Form.Label>\n                      <Form.Control as=\"textarea\" rows={5} placeholder=\"Razón para cerrar la campaña\" onChange={event => this.setState({ cpDescription: event.target.value})}/>\n                      <Form.Text className=\"text-muted\">\n                      *.\n                      </Form.Text>\n                  </Form.Group>\n              </Form>\n          </Modal.Body>\n          <Modal.Footer className=\"footer-buttons\">\n              <Col lg={6} className=\"aling-left\">\n                  <button \n                      id=\"cerrar\"\n                      className=\"normal-button\" \n                      onClick={this.handleClose}\n                      data-testid=\"cancelButton\">\n                      Cerrar\n                  </button>\n              </Col>\n              <Col lg={6} className=\"aling-right\">\n                  <button\n                      className=\"normal-button\" \n                      onClick={this.create}\n                      data-testid=\"createCloseProposalButton\">\n                      Crear\n                  </button>\n              </Col>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default ClosePorposalModal;","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { Dimmer, Loader, Icon, Pagination, Button, Label }  from 'semantic-ui-react'\n\n\nimport CardCloseProposal from \"./CardCloseProposal.js\";\nimport CloseProposalDetail from \"./CloseProposalDetail.js\";\nimport MessageModal from \"../modals/MessageModal\"\nimport CloseProposalModal from \"../modals/CloseProposalModal\"\n\nimport { campaignService } from \"../../services/campaignService.js\"\nimport { ipfsService } from \"../../services/ipfsService.js\"\n\nclass DisplayCloseProposals extends React.Component {\n\n  state = {\n    active: this.props.active,\n    dproposal_data: {},\n    dproposal_data_i: 0,\n    pastCProposals: [],\n    cproposals: [],\n    loaded: false,\n    activePage:1,\n    totalCProposals: 0,\n    totalPages: 0,\n    per_page: 3,\n    loadingClose: false,\n    loadingVote: false,\n    showMessage: false    \n  };\n\n  async getCProposals(activePage) {\n\n    const allCProposals = this.state.pastCProposals;\n    const cproposals = []\n    const i_cproposal = this.state.totalCProposals - 1 - ((activePage-1)*(this.state.per_page));\n    const last_i = Math.max(-1, i_cproposal - (this.state.per_page));\n    \n    for(let i=i_cproposal; (i >= 0 && i > last_i) ; i--){\n      const pHash = allCProposals[i];\n      const ipfsPath = ipfsService.getIPFSHash(pHash);\n      const ipfsData = await ipfsService.getJsonFromIPFSHash(ipfsPath);\n      cproposals.push({\n          \"index_cproposal\": i,\n          \"title\": ipfsData.title, \n          \"description\": ipfsData.description ,\n          \"proposal_date\": ipfsData.created_date\n        });\n    }\n    \n    this.setState({ loaded: true,  cproposals: cproposals });\n\n  }\n\n  handlePaginationChange = (e, { activePage }) => {\n    this.setState({ activePage: activePage, loaded: false });\n    this.getCProposals(activePage);\n  }\n\n  handleMessageClose = () => this.setState({ showMessage: false});\n\n  async setCloseProposalData(index) {\n\n    if (this.state.cproposals.length > index) {\n      this.setState({ loaded: false });\n      const cproposalData = this.state.cproposals[index];\n      const cproposalInfo = await campaignService.getCloseProposalInfo(cproposalData[\"index_cproposal\"]);\n      \n      cproposalData[\"approvalsCount\"] = cproposalInfo.approvalsCount;\n      cproposalData[\"disapprovalsCount\"] = cproposalInfo.disapprovalsCount;\n      cproposalData[\"status\"] = cproposalInfo.status;\n      cproposalData[\"limitTime\"] = cproposalInfo.limitTime;\n      cproposalData[\"hasVoted\"] = cproposalInfo.senderHasVote;\n      cproposalData[\"author\"] = cproposalInfo.author;\n      cproposalData[\"authorOwner\"] = (cproposalInfo.author === this.props.owner);\n\n      const campaignActive = (this.props.campaignStatus !== \"Cerrada\") && (this.props.campaignStatus !== \"Exitosa\")\n      const canVote = campaignActive && (!this.props.isOwner) && this.props.isMember && cproposalInfo.inTime && (!cproposalInfo.senderHasVote);\n      const canClose = campaignActive && (this.props.isMember || this.props.isOwner) && !(cproposalInfo.inTime) && cproposalInfo.status==='0';\n      const canCreate = campaignActive && (this.props.isMember || this.props.isOwner) && this.props.out_grace_period\n\n      this.setState({ dproposal_data_i: index, \n                      dproposal_data : cproposalData, \n                      canVote: canVote, \n                      canClose: canClose,\n                      canCreate: canCreate,\n                      loaded: true });\n    }\n  }\n\n  async showDProposal(index) {\n    await this.setCloseProposalData(index);\n    this.setState({ active: \"cproposals_detail\"});\n  }\n  \n  async disapprove() {\n    this.setState({ loadingVote: true});\n    const index = this.state.dproposal_data[\"index_cproposal\"];\n    campaignService.disapproveCloseProposal(index).then((statusResponse) => {\n      let title, message = \"\";\n      if (statusResponse.error) {\n        title = \"Hubo un error al votar\";\n        switch (statusResponse.errorMsg) {\n          case \"Acción denegada\":\n            message = \"Has denegado la acción a tráves de metamask. Para que este completa debes aceptarla.\";\n            break;\n          case \"Nonce error\":\n            message = \"Error de nonce: El nonce de la cuenta elegida y de la transacción son diferentes.\";\n            break;\n          case \"Gas insuficiente\":\n            message = \"La operación llevó más gas que el que pusiste como límite.\";\n            break;\n          default: \n            message = \"Error desconocido\";\n            break;\n        }\n      }\n      else {\n        title = \"Votación exitosa\";\n        message = \"¡Tu voto se envió de manera exitosa!\\n ¡Gracias por tu compromiso!\";\n        this.setState({ canVote: false}); \n      }\n      this.setState({ loadingVote: false, \n                      message_m: message, \n                      showMessage: true, \n                      title_m: title});\n    });\n  }\n\n  async approve() {\n    this.setState({ loadingVote: true });\n    const index = this.state.dproposal_data[\"index_cproposal\"];\n    campaignService.approveCloseProposal(index).then((statusResponse) => {\n      let title, message = \"\";\n      if (statusResponse.error) {\n        title = \"Hubo un error al votar\";\n        switch (statusResponse.errorMsg) {\n          case \"Acción denegada\":\n            message = \"Has denegado la acción a tráves de metamask. Para que este completa debes aceptarla.\";\n            break;\n          case \"Nonce error\":\n            message = \"Error de nonce: El nonce de la cuenta elegida y de la transacción son diferentes.\";\n            break;\n          case \"Gas insuficiente\":\n            message = \"La operación llevó más gas que el que pusiste como límite.\";\n            break;\n          default: \n            message = \"Error desconocido\";\n            break;\n        }\n      }\n      else {\n        title = \"Votación exitosa\";\n        message = \"¡Tu voto se envió de manera exitosa!\\n ¡Gracias por tu compromiso!\"; \n        this.setState({ canVote: false}); \n      }\n      this.setState({ loadingVote: false, \n                      message_m: message, \n                      showMessage: true, \n                      title_m: title});\n    });\n  }\n\n  async closeCProposal() {\n    this.setState({ loadingClose: true});\n    const index = this.state.dproposal_data[\"index_cproposal\"];\n    campaignService.closeCloseProposal(index).then((statusResponse) => {\n      let title, message = \"\";\n      if (statusResponse.error) {\n        title = \"Hubo un error al cerrar el pedido\";\n        switch (statusResponse.errorMsg) {\n          case \"Acción denegada\":\n            message = \"Has denegado la acción a tráves de metamask. Para que este completa debes aceptarla.\";\n            break;\n          case \"Nonce error\":\n            message = \"Error de nonce: El nonce de la cuenta elegida y de la transacción son diferentes.\";\n            break;\n          case \"Gas insuficiente\":\n            message = \"La operación llevó más gas que el que pusiste como límite.\";\n            break;\n          default: \n            message = \"Error desconocido\";\n            break;\n        }\n      }\n      else {\n        title = \"Cierre exitoso\";\n        message = \"¡El cierre del pedido se envío de manera exitosa!\"; \n        this.setState({ canClose: false}); \n      }\n      this.setState({ loadingClose: false, \n                      message_m: message, \n                      showMessage: true, \n                      title_m: title});\n    });\n  }\n\n  async getListCProposals(page) {\n    this.setState({ loaded: false });\n    const pastCProposals = await campaignService.getCloseProposals();\n    this.setState({ pastCProposals : pastCProposals.map(pu =>  pu.returnValues[0]), \n                    totalCProposals: pastCProposals.length,\n                    totalPages: Math.ceil(pastCProposals.length/this.state.per_page) });\n    await this.getCProposals(page);\n  }\n\n  componentDidMount = async() => {\n    try {\n      const campaignActive = (this.props.campaignStatus !== \"Cerrada\") && (this.props.campaignStatus !== \"Exitosa\")\n      const canCreate = campaignActive && (this.props.isMember || this.props.isOwner) && this.props.out_grace_period\n      this.setState({ canCreate: canCreate});\n      await this.getListCProposals(1);\n      const actualizeCProposalInfo = async() => { this.setCloseProposalData(this.state.dproposal_data_i) };\n      const actualizeCProposalsListInfo = async() => { this.getListCProposals(this.state.activePage) };\n      await campaignService.subscribeToVoteCloseProposal(actualizeCProposalInfo);\n      await campaignService.subscribeToCloseProposalDissaproved(actualizeCProposalInfo);\n      await campaignService.subscribeToCreateCloseProposal(actualizeCProposalsListInfo);\n\n    } catch (error) {\n        console.error(error);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.campaignStatus !== prevProps.campaignStatus) {\n      this.setCloseProposalData(this.state.dproposal_data_i);\n    }\n  } \n\n  render() {\n    let dproposal_nodes = []\n      for (const [index, dproposal] of this.state.cproposals.entries()) {\n        dproposal_nodes.push(\n          <Col lg={4} className=\"invisible_button\"\n          key={index}\n          onClick={() => { this.showDProposal(index) }}>\n            <CardCloseProposal  \n              title={dproposal.title}\n              description={dproposal.description}\n              dproposal_date={dproposal.proposal_date}\n            />\n          </Col>\n        )\n    }\n\n    return ( \n            <div className=\"proposal-info\" id=\"close_proposals_container\" style={{display: \"none\"}}> \n                {!this.state.loaded && \n                  <Dimmer active>\n                    { this.state.active===\"cproposals_list\" ?\n                    <h1 data-testid=\"info-loading\"> Obteniendo los pedidos de cierre... </h1> :\n                    <h1 data-testid=\"info-loading\"> Obteniendo detalle de pedido de cierre... </h1>\n                    }\n                    <Loader size='large' inline>Cargando...</Loader>\n                  </Dimmer>\n                }\n        \n                { this.state.showMessage &&\n                  <MessageModal\n                  showMessage={this.state.showMessage}\n                  handleMessageClose={this.handleMessageClose}\n                  message={this.state.message_m}\n                  title={this.state.title_m} />\n                }           \n                \n                { this.state.active===\"cproposals_list\" && dproposal_nodes.length>0 && this.state.loaded &&\n                  <div className=\"show-list-close-proposals\">\n                    \n                    { this.state.canCreate &&\n                      <CloseProposalModal \n                      createCPLoading={false}/>\n                    }\n\n                    <Row  id=\"cproposals_list\">\n                      { dproposal_nodes }                \n                    </Row> \n                    <Row className=\"justify-content-md-center\">\n                      <Pagination\n                        activePage={this.state.activePage}\n                        onPageChange={this.handlePaginationChange}\n                        totalPages={this.state.totalPages}\n                      />\n                    </Row>\n                  </div>\n                }\n\n                { this.state.active===\"cproposals_list\" && dproposal_nodes.length===0 && this.state.loaded &&\n                  <div>  \n                      <h1> Aún no hay pedidos de cierre para mostrar. </h1>\n                      <p> No dejes de estar pendiente a los nuevos pedidos que puedan aparecer.</p>\n                  \n                      { this.state.canCreate &&\n                        <CloseProposalModal \n                        createCPLoading={false}/>\n                      }\n                  </div>               \n                }\n                \n                \n                { this.state.active===\"cproposals_detail\" && this.state.loaded &&\n                  <div  id=\"cproposals_detail\">\n                    <CloseProposalDetail\n                      index_cproposal={this.state.dproposal_data.index_cproposal}\n                      title={this.state.dproposal_data.title}\n                      description={this.state.dproposal_data.description}\n                      dproposal_date={this.state.dproposal_data.proposal_date}\n                      isMember={this.props.isMember}\n                      isOwner={this.props.isOwner}\n                      authorOwner={this.state.dproposal_data.authorOwner}\n                      author={this.state.dproposal_data.author}\n                      approvalsCount={this.state.dproposal_data.approvalsCount}\n                      disapprovalsCount={this.state.dproposal_data.disapprovalsCount}\n                      status={this.state.dproposal_data.status}\n                      limitTime={this.state.dproposal_data.limitTime}\n                      hasVoted={this.state.dproposal_data.hasVoted} />\n                  \n                    <div>\n                      <Row className=\"proposal-footer\">\n                        <Col lg={6} className=\"aling-left\">\n                          <Button as='div' labelPosition='right' \n                          disabled={ this.state.loadingVote ||  !this.state.canVote }\n                          onClick= {() => { this.approve()  }}>\n                            <Button icon>\n                              <Icon name='thumbs up'/>\n                              &nbsp;{ this.state.canVote ? 'Aprobar' : 'Aprobados'}\n                            </Button>\n                            <Label as='a' basic pointing='left'>\n                              {this.state.dproposal_data.approvalsCount}\n                            </Label>\n                          </Button>\n                        </Col>\n                        <Col lg={6} className=\"aling-right\">\n                          <Button as='div' labelPosition='left' \n                          disabled={ this.state.loadingVote ||  !this.state.canVote }\n                          onClick= {() => { this.disapprove()  }}>\n                            <Label as='a' basic pointing='right'>\n                              {this.state.dproposal_data.disapprovalsCount}\n                            </Label>\n                            <Button icon>\n                              <Icon name='thumbs down'/>\n                              &nbsp;{ this.state.canVote ? 'Desaprobar' : 'Desaprobados'}\n                            </Button>\n                          </Button>\n                        </Col>\n                      </Row>\n                  </div>\n                \n                  <hr style={{margin: \"2em\"}}/>\n                      <Row className=\"proposal-footer\">\n                        <Col lg={6} className=\"aling-left\">\n                          <Button className=\"normal-button no-margin\"\n                          onClick={() => { this.setState({ active: \"cproposals_list\"})  }}>\n                            <Icon name='angle left' /> Volver\n                          </Button>\n                        </Col>\n                        { this.state.canClose &&\n                        <Col lg={6} className=\"aling-right\">\n                          <Button\n                          loading={this.state.loadingClose}\n                          className=\"normal-button no-margin\"                          \n                          data-testid=\"closeProposalButton\"\n                          onClick= {() => { this.closeCProposal()  }}>\n                            Cerrar Pedido\n                          </Button>\n                        </Col>\n                        }\n                      </Row>\n                </div>\n              }\n              </div>\n            );\n  }\n}\n\nexport default DisplayCloseProposals;","import React from \"react\";\nimport { Message }  from 'semantic-ui-react';\nimport { Row } from \"react-bootstrap\";\n\nclass ErrorMessage extends React.Component {\n\n  render() {\n    return (\n      <Row>\n        <div className=\"title-error-msj\">\n          <Message negative>\n            <Message.Header>Ha ocurrido un error al buscar los datos</Message.Header>\n              <span data-testid=\"error-msj\">{this.props.error_msj}</span>\n            </Message>\n        </div>\n      </Row>\n    );\n  }\n}\n\nexport default ErrorMessage;","import React from \"react\";\n\nclass MenuButton extends React.Component {\n\n  render() {\n\n    return (\n\n        <button \n            data-testid=\"button\"\n            className=\"invisible_button\"\n            disabled={this.props.disabledValue}\n            onClick={this.props.changeActive}\n        >\n          <li id={this.props.idName} className={this.props.classLi} data-testid=\"textButton\">\n            {this.props.textButton}\n          </li>\n        </button>\n    );\n  }\n}\n\nexport default MenuButton;","import React from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport {Dimmer, Loader }  from 'semantic-ui-react';\n\nimport { fromIntToStatusCampaign } from \"../../helpers/utils.js\"\nimport { ipfsService } from \"../../services/ipfsService.js\"\nimport { campaignService } from \"../../services/campaignService.js\"\n\nimport DisplayContent from \"./DisplayContent\"\nimport DisplayProposals from \"../proposals/DisplayProposals\"\nimport DisplayProgressUpdates from \"../progressUpdates/DisplayProgressUpdates\"\nimport DisplayCloseProposals from \"../closeProposals/DisplayCloseProposals\"\n\nimport ErrorMessage from \"../errors/ErrorMessage\"\nimport MenuButton from \"../buttons/MenuButton\"\n\nimport deployedCampaignsInfo from \"../../contracts/campaignAddressesTestNet.json\"\n//import deployedCampaignsInfo from \"../../contracts/campaignAddresses.json\"\n\n\nclass ContainerInfo extends React.Component {\n\n  state = {\n    active: this.props.active,\n    loaded: false,\n    error: false,\n    error_msj: \"\"\n  };\n\n  change_active(new_active) {\n \n    const old_active = this.state.active;\n\n    const active_element = document.getElementById(old_active);\n    const active_container = document.getElementById(\n      old_active.concat(\"_container\")\n    );\n    active_element.className = \"menu_user_li\";\n    active_container.style = \"display: none;\";\n    \n    const new_active_element = document.getElementById(new_active);\n    const new_active_container = document.getElementById(\n      new_active.concat(\"_container\")\n    );\n\n    new_active_element.className = \"menu_user_li_active\";\n    new_active_container.style = \"\";\n    this.setState({ active: new_active});\n  }\n\n  loadCampaignData = async() => {\n\n    try {\n      \n      const campaign = deployedCampaignsInfo[\"campaigns\"][this.props.indexCampaign]\n      const ipfsPath = campaign[\"ipfsPath\"]\n      const address = campaign[\"address\"]\n      const blockNumber = campaign[\"blockNumber\"];\n\n      const ipfsData = await ipfsService.getJsonFromIPFSHash(ipfsPath);\n\n      const correctNetwork = await campaignService.isCorrectNetwork();\n      if (!correctNetwork){\n        this.setState({\n          loaded: true,\n          error: true,\n          error_msj: \"Por favor, verifica en Metamask haber seleccionado la red Rinkeby.\"\n        });\n      }\n      else {\n        const instance = await campaignService.setInstanceFromAddress(address, blockNumber);\n        console.log(instance);\n        console.log(\"1\")\n        const campaignInfo = await campaignService.getCampaignInfo();\n        console.log(\"2\")\n        const isMember = await campaignService.getMembership();\n        console.log(\"3\")\n        const balance = await campaignService.getBalance();\n        console.log(\"4\")\n        const actualAccount = await campaignService.getFirstAccount();\n        console.log(\"5\")\n        const isOwner = actualAccount===campaignInfo.owner;\n\n        const actualizeStatusInfo = async() => {this.actualizeStatusInfo()};\n        await campaignService.subscribeToChangeStatus(actualizeStatusInfo);\n        console.log(\"6\")\n\n        this.setState({\n          loaded: true,\n          instance: instance,\n          balance: balance,\n          isMember: isMember,\n          status: fromIntToStatusCampaign(campaignInfo.status),\n          owner: campaignInfo.owner,\n          goal: campaignInfo.goal,\n          minimunContribution: campaignInfo.minimunContribution,\n          membersCount: campaignInfo.membersCount,\n          finalContributions: campaignInfo.finalContributions,\n          remainingContributions: campaignInfo.remainingContributions,\n          isOwner: isOwner,\n          out_grace_period: ((campaignInfo.out_grace_period && campaignInfo.status==='0') || campaignInfo.status==='1'),\n          ipfsData: ipfsData,\n          c_index: this.props.indexCampaign\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  actualizeStatusInfo = async() => {  \n    const enum_status = await campaignService.getStatus();\n    const status = fromIntToStatusCampaign(enum_status);\n    this.setState({ status: status});\n  }\n\n  refreshSite = async () => {\n\n    this.setState({ loaded: false });\n    await this.loadCampaignData();\n    if (this.state.active !== \"general_data\") {\n      this.change_active(\"general_data\");\n    }\n  }\n\n  componentDidMount = async() => {\n    await this.loadCampaignData();\n    window.ethereum.on('accountsChanged', async(accounts) => { this.refreshSite() });\n  }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.indexCampaign !== prevProps.indexCampaign) {\n      this.refreshSite();\n    }\n  } \n\n  render() {\n              return (<Row className=\"container-info\"> \n                         <Col lg={3} className=\"user_side_menu\">\n                          <ul className=\"vertical-center\">\n\n                            <MenuButton \n                              disabledValue={this.state.error}\n                              changeActive={() => {\n                                this.change_active(\"general_data\");\n                              }}\n                              idName=\"general_data\"\n                              classLi=\"menu_user_li_active\"\n                              textButton=\"Datos Generales\"\n                            />\n\n                            <MenuButton \n                              disabledValue={this.state.error}\n                              changeActive={() => {\n                                this.change_active(\"proposals\");\n                              }}\n                              idName=\"proposals\"\n                              classLi=\"menu_user_li\"\n                              textButton=\"Pedidos de presupuesto\"\n                            />\n\n                            <MenuButton \n                              disabledValue={this.state.error}\n                              changeActive={() => {\n                                this.change_active(\"progress\");\n                              }}\n                              idName=\"progress\"\n                              classLi=\"menu_user_li\"\n                              textButton=\"Avances\"\n                            />\n\n                            <MenuButton \n                              disabledValue={this.state.error}\n                              changeActive={() => {\n                                this.change_active(\"close_proposals\");\n                              }}\n                              idName=\"close_proposals\"\n                              classLi=\"menu_user_li\"\n                              textButton=\"Pedidos de cierre\"\n                            />\n\n                          </ul>\n                        </Col>\n\n                        {                        \n                        this.state.loaded  && !this.state.error && \n                         <Col className=\"display-content\" lg={9}>\n                          <DisplayContent\n                          ipfsData={this.state.ipfsData}\n                          data={{ \n                            status: this.state.status,\n                            owner: this.state.owner,\n                            goal: this.state.goal,\n                            minimunContribution: this.state.minimunContribution,\n                            membersCount: this.state.membersCount,\n                            isMember: this.state.isMember,\n                            balance: this.state.balance,\n                            remainingContributions: this.state.remainingContributions,\n                            finalContributions: this.state.finalContributions,\n                            isOwner: this.state.isOwner,\n                            c_index: this.state.c_index\n                          }}/>\n\n                          <DisplayProgressUpdates\n                          instance={this.state.instance}\n                          active=\"progress_updates_list\"/> \n\n                          <DisplayProposals\n                          campaignStatus={this.state.status}\n                          instance={this.state.instance}\n                          isMember={this.state.isMember}\n                          isOwner={this.state.isOwner}\n                          active=\"proposals_list\"/>\n\n\n                          <DisplayCloseProposals\n                          campaignStatus={this.state.status}\n                          instance={this.state.instance}\n                          isMember={this.state.isMember}\n                          isOwner={this.state.isOwner}\n                          owner={this.state.owner}\n                          out_grace_period={this.state.out_grace_period}\n                          active=\"cproposals_list\"/>\n                          \n                        </Col>\n                                           \n                        }\n\n                        {!this.state.loaded && \n                        <Dimmer active>\n                        <h1 data-testid=\"info-loading\"> Obteniendo la información de la campaña... </h1>\n  \n                          <Loader size='large' inline>Recuerda inciar sesión en metamask</Loader>\n                        </Dimmer>\n                        }\n\n                      { this.state.error && \n                       \n                          <Col data-testid=\"info-error\" className=\"display-content\" lg={9}>\n                            <ErrorMessage error_msj={this.state.error_msj}/>\n                          </Col>\n                      }\n    \n                      </Row>);\n  }\n}\n\nexport default ContainerInfo;","import React, { Component } from \"react\";\n\nimport NavBar from \"./components/NavBar.js\";\nimport ContainerInfo from \"./components/campaign/ContainerInfo.js\"\n\nimport \"./App.css\";\n\nclass App extends Component {\n\n    state = {\n        indexCampaign: 0\n      };\n\n      previusCampaign = () =>\n    { \n        const new_index = this.state.indexCampaign -1 ;\n        this.setState({ indexCampaign: new_index })\n    }\n\n    nextCampaign = () =>\n    { \n        const new_index = this.state.indexCampaign +1 ;\n        this.setState({ indexCampaign: new_index })\n    }\n\n\n    render() {\n\n        return ( \n            <div className = \"App root\" >\n                <NavBar\n                    indexCampaign={this.state.indexCampaign}\n                    previusCampaign={this.previusCampaign}\n                    nextCampaign={this.nextCampaign}\n                />\n                <ContainerInfo \n                    active=\"general_data\"\n                    indexCampaign={this.state.indexCampaign}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}